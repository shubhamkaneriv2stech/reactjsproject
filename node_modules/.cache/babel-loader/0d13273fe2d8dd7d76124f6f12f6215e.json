{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/ReactJs/RouterAssignment/src/components/common/CommonReactTable.js\",\n    _s = $RefreshSig$();\n\nimport { useTable, usePagination, useSortBy, useGlobalFilter, useExpanded } from \"react-table\";\nimport { Container, Table, Row, Col } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport { Button } from \"@material-ui/core\";\nimport { FaAngleDoubleLeft, FaAngleDoubleRight } from \"react-icons/fa\";\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\nimport GlobalSearch from \"./GlobalSearch\"; // const subComponent = (row) => {\n//     axios\n//         .get(`https://jsonplaceholder.typicode.com/posts/${row.id}/comments`)\n//         .then(function (response) {\n//             let a = response.data;\n//             console.log(a);\n//             return a;\n//         })\n//         .catch(function (error) {\n//             // handle error\n//             console.log(error);\n//         });\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommonReactTable = ({\n  data,\n  columns,\n  editItem,\n  tableTitle,\n  showPagination,\n  search,\n  renderRowSubComponent\n}) => {\n  _s();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    rows,\n    prepareRow,\n    visibleColumns,\n    setGlobalFilter,\n    state: {\n      pageIndex,\n      pageSize,\n      globalFilter,\n      expanded\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 5,\n      expanded: true\n    } // getSubRows: subComponent,\n\n  }, useGlobalFilter, useSortBy, useExpanded, usePagination); //For rendering tooltip\n  // const DataRender = () => {\n  //     console.log(comments);\n  //     return (\n  //         <>\n  //             <tr>\n  //                 <th> </th>\n  //                 <th style={{ fontSize: \"12px\" }}> Id</th>\n  //                 <th style={{ fontSize: \"12px\" }}> Email</th>\n  //                 <th style={{ fontSize: \"12px\" }}> name</th>\n  //                 <th style={{ fontSize: \"12px\" }}> Body</th>\n  //             </tr>\n  //             {comments.map((items, i) => {\n  //                 console.log(items.body);\n  //                 return (\n  //                     <tr key={i}>\n  //                         <td> </td>\n  //                         <td> {items.id}</td>\n  //                         <td> {items.email}</td>\n  //                         <td> {items.name}</td>\n  //                         <td>\n  //                             <div className=\"ellipsis_class\">\n  //                                 {items.body}\n  //                             </div>\n  //                         </td>\n  //                     </tr>\n  //                 );\n  //             })}\n  //         </>\n  //     );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    style: {\n      padding: \"0px 25px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        justifyContent: \"space-between\",\n        padding: \"15px 0px \",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: tableTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), search && /*#__PURE__*/_jsxDEV(Col, {\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(GlobalSearch, {\n          filter: globalFilter,\n          setFilter: setGlobalFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          style: {\n            fontSize: \"12px\"\n          },\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            width: column.width,\n            className: column.StyleClass,\n            ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? \"ðŸ”½\" : \" ðŸ”¼\" : column.canSort ? /*#__PURE__*/_jsxDEV(ImportExportIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 45\n              }, this) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), showPagination ? /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.length > 0 ? page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  // style={{\n                  //     textAlign: \"left\",\n                  // }}\n                  className: cell.column.StyleClass,\n                  onClick: () => console.log(typeof cell.value),\n                  children: cell.render(\"Cell\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 53\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 41\n            }, this), row.isExpanded && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: visibleColumns.length,\n                children: renderRowSubComponent(row)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"...No Data !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.length > 0 ? rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              className: editItem === row.original.id ? \"bg-info\" : \"\",\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps({\n                    className: cell.column.className\n                  }),\n                  children: cell.render(\"Cell\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 53\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 41\n            }, this), row.isExpanded && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: visibleColumns.length,\n                children: renderRowSubComponent(row)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"...No Data !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), showPagination && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Page \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: pageIndex + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 30\n        }, this), \" -\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\" \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            padding: \"3px\"\n          },\n          children: \"of\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: rows.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this), \" Go to Page:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          min: \"1\",\n          max: pageOptions.length,\n          onChange: e => {\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(pageNumber);\n          },\n          style: {\n            width: \"40px\",\n            marginRight: \"5px\",\n            marginLeft: \"5px\",\n            height: \"30px\",\n            borderRadius: \"5px\",\n            borderColor: \"#0d6efd\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", \"Row Per Page:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: pageSize,\n          onChange: e => setPageSize(Number(e.target.value)),\n          style: {\n            width: \"90px\",\n            marginRight: \"3px\",\n            marginLeft: \"3px\",\n            height: \"30px\",\n            borderRadius: \"5px\",\n            borderColor: \"#0d6efd\"\n          },\n          children: [5, 10, 25, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          style: {\n            marginRight: \"3px\",\n            marginLeft: \"3px\"\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(FaAngleDoubleLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 40\n          }, this),\n          onClick: () => gotoPage(0),\n          disabled: !canPreviousPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          style: {\n            marginRight: \"3px\",\n            marginLeft: \"3px\"\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 40\n          }, this),\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          style: {\n            marginRight: \"3px\",\n            marginLeft: \"3px\"\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 40\n          }, this),\n          onClick: () => nextPage(),\n          disabled: !canNextPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          style: {\n            marginLeft: \"3px\"\n          },\n          startIcon: /*#__PURE__*/_jsxDEV(FaAngleDoubleRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 40\n          }, this),\n          onClick: () => gotoPage(pageCount - 1),\n          disabled: !canNextPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommonReactTable, \"XBY8errc833PPZybze++y4NmVAg=\", false, function () {\n  return [useTable];\n});\n\n_c = CommonReactTable;\nCommonReactTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  showPagination: PropTypes.bool,\n  search: PropTypes.bool,\n  tableTitle: PropTypes.string,\n  editItem: PropTypes.string\n};\nexport default CommonReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonReactTable\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/common/CommonReactTable.js"],"names":["useTable","usePagination","useSortBy","useGlobalFilter","useExpanded","Container","Table","Row","Col","PropTypes","NavigateNextIcon","NavigateBeforeIcon","Button","FaAngleDoubleLeft","FaAngleDoubleRight","ImportExportIcon","GlobalSearch","CommonReactTable","data","columns","editItem","tableTitle","showPagination","search","renderRowSubComponent","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","rows","prepareRow","visibleColumns","setGlobalFilter","state","pageIndex","pageSize","globalFilter","expanded","initialState","padding","justifyContent","alignItems","map","headerGroup","getHeaderGroupProps","fontSize","headers","column","width","StyleClass","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canSort","length","row","getRowProps","cells","cell","getCellProps","console","log","value","isExpanded","original","id","className","e","pageNumber","target","Number","marginRight","marginLeft","height","borderRadius","borderColor","propTypes","array","bool","string"],"mappings":"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","sourcesContent":["import {\r\n    useTable,\r\n    usePagination,\r\n    useSortBy,\r\n    useGlobalFilter,\r\n    useExpanded,\r\n} from \"react-table\";\r\n\r\nimport { Container, Table, Row, Col } from \"react-bootstrap\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FaAngleDoubleLeft, FaAngleDoubleRight } from \"react-icons/fa\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport GlobalSearch from \"./GlobalSearch\";\r\n\r\n// const subComponent = (row) => {\r\n//     axios\r\n//         .get(`https://jsonplaceholder.typicode.com/posts/${row.id}/comments`)\r\n//         .then(function (response) {\r\n//             let a = response.data;\r\n//             console.log(a);\r\n//             return a;\r\n//         })\r\n//         .catch(function (error) {\r\n//             // handle error\r\n//             console.log(error);\r\n//         });\r\n// };\r\nconst CommonReactTable = ({\r\n    data,\r\n    columns,\r\n    editItem,\r\n    tableTitle,\r\n    showPagination,\r\n    search,\r\n    renderRowSubComponent,\r\n}) => {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n        rows,\r\n        prepareRow,\r\n        visibleColumns,\r\n        setGlobalFilter,\r\n        state: { pageIndex, pageSize, globalFilter, expanded },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: 0, pageSize: 5, expanded: true },\r\n\r\n            // getSubRows: subComponent,\r\n        },\r\n\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        useExpanded,\r\n        usePagination\r\n    );\r\n    //For rendering tooltip\r\n\r\n    // const DataRender = () => {\r\n    //     console.log(comments);\r\n    //     return (\r\n    //         <>\r\n    //             <tr>\r\n    //                 <th> </th>\r\n    //                 <th style={{ fontSize: \"12px\" }}> Id</th>\r\n    //                 <th style={{ fontSize: \"12px\" }}> Email</th>\r\n    //                 <th style={{ fontSize: \"12px\" }}> name</th>\r\n    //                 <th style={{ fontSize: \"12px\" }}> Body</th>\r\n    //             </tr>\r\n    //             {comments.map((items, i) => {\r\n    //                 console.log(items.body);\r\n    //                 return (\r\n    //                     <tr key={i}>\r\n    //                         <td> </td>\r\n    //                         <td> {items.id}</td>\r\n    //                         <td> {items.email}</td>\r\n    //                         <td> {items.name}</td>\r\n    //                         <td>\r\n    //                             <div className=\"ellipsis_class\">\r\n    //                                 {items.body}\r\n    //                             </div>\r\n    //                         </td>\r\n    //                     </tr>\r\n    //                 );\r\n    //             })}\r\n    //         </>\r\n    //     );\r\n    // };\r\n    return (\r\n        <Container fluid style={{ padding: \"0px 25px\" }}>\r\n            <Row\r\n                style={{\r\n                    justifyContent: \"space-between\",\r\n                    padding: \"15px 0px \",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <Col xs={4}>\r\n                    <h5>{tableTitle}</h5>\r\n                </Col>\r\n\r\n                {search && (\r\n                    <Col xs={4}>\r\n                        <GlobalSearch\r\n                            filter={globalFilter}\r\n                            setFilter={setGlobalFilter}\r\n                        />\r\n                    </Col>\r\n                )}\r\n            </Row>\r\n\r\n            <Table {...getTableProps()} striped bordered hover>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr\r\n                            {...headerGroup.getHeaderGroupProps()}\r\n                            style={{\r\n                                fontSize: \"12px\",\r\n                            }}\r\n                        >\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th\r\n                                    width={column.width}\r\n                                    className={column.StyleClass}\r\n                                    {...column.getHeaderProps(\r\n                                        column.getSortByToggleProps()\r\n                                    )}\r\n                                >\r\n                                    {column.render(\"Header\")}\r\n\r\n                                    <span>\r\n                                        {column.isSorted ? (\r\n                                            column.isSortedDesc ? (\r\n                                                \"ðŸ”½\"\r\n                                            ) : (\r\n                                                \" ðŸ”¼\"\r\n                                            )\r\n                                        ) : column.canSort ? (\r\n                                            <ImportExportIcon />\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n\r\n                {showPagination ? (\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.length > 0 ? (\r\n                            page.map((row) => {\r\n                                prepareRow(row);\r\n                                return (\r\n                                    <>\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map((cell) => {\r\n                                                return (\r\n                                                    <td\r\n                                                        {...cell.getCellProps()}\r\n                                                        // style={{\r\n                                                        //     textAlign: \"left\",\r\n                                                        // }}\r\n                                                        className={\r\n                                                            cell.column\r\n                                                                .StyleClass\r\n                                                        }\r\n                                                        onClick={() =>\r\n                                                            console.log(\r\n                                                                typeof cell.value\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {cell.render(\"Cell\")}\r\n                                                    </td>\r\n                                                );\r\n                                            })}\r\n                                        </tr>\r\n\r\n                                        {/* {row.isExpanded &&\r\n                                            renderRowSubComponent(row)} */}\r\n                                        {row.isExpanded && (\r\n                                            <tr>\r\n                                                <td\r\n                                                    colSpan={\r\n                                                        visibleColumns.length\r\n                                                    }\r\n                                                >\r\n                                                    {renderRowSubComponent(row)}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <tr>\r\n                                <td colSpan=\"5\">...No Data !</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                ) : (\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.length > 0 ? (\r\n                            rows.map((row) => {\r\n                                prepareRow(row);\r\n                                return (\r\n                                    <>\r\n                                        <tr\r\n                                            {...row.getRowProps()}\r\n                                            className={\r\n                                                editItem === row.original.id\r\n                                                    ? \"bg-info\"\r\n                                                    : \"\"\r\n                                            }\r\n                                        >\r\n                                            {row.cells.map((cell) => {\r\n                                                return (\r\n                                                    <td\r\n                                                        {...cell.getCellProps({\r\n                                                            className:\r\n                                                                cell.column\r\n                                                                    .className,\r\n                                                        })}\r\n                                                        // onClick={() => passData(row)}\r\n                                                        // onClick={() =>\r\n                                                        //     console.log(cell)\r\n                                                        // }\r\n                                                        // style={{\r\n                                                        //     textAlign: \"center\",\r\n                                                        // }}\r\n                                                    >\r\n                                                        {cell.render(\"Cell\")}\r\n                                                    </td>\r\n                                                );\r\n                                            })}\r\n                                        </tr>\r\n\r\n                                        {/* {row.isExpanded &&\r\n                                            renderRowSubComponent(row)} */}\r\n                                        {row.isExpanded && (\r\n                                            <tr>\r\n                                                <td\r\n                                                    colSpan={\r\n                                                        visibleColumns.length\r\n                                                    }\r\n                                                >\r\n                                                    {renderRowSubComponent(row)}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <tr>\r\n                                <td colSpan=\"5\">...No Data !</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                )}\r\n            </Table>\r\n            {showPagination && (\r\n                <div className=\"d-flex justify-content-between align-items-center \">\r\n                    <div>\r\n                        Page <strong>{pageIndex + 1}</strong> -{\" \"}\r\n                        <strong> {pageOptions.length}</strong>\r\n                        <span style={{ padding: \"3px\" }}>of</span>\r\n                        <strong>{rows.length}</strong> Go to Page:\r\n                        <input\r\n                            type=\"number\"\r\n                            defaultValue={pageIndex + 1}\r\n                            min=\"1\"\r\n                            max={pageOptions.length}\r\n                            onChange={(e) => {\r\n                                const pageNumber = e.target.value\r\n                                    ? Number(e.target.value) - 1\r\n                                    : 0;\r\n                                gotoPage(pageNumber);\r\n                            }}\r\n                            style={{\r\n                                width: \"40px\",\r\n                                marginRight: \"5px\",\r\n                                marginLeft: \"5px\",\r\n                                height: \"30px\",\r\n                                borderRadius: \"5px\",\r\n                                borderColor: \"#0d6efd\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        {\" \"}\r\n                        Row Per Page:\r\n                        <select\r\n                            value={pageSize}\r\n                            onChange={(e) =>\r\n                                setPageSize(Number(e.target.value))\r\n                            }\r\n                            style={{\r\n                                width: \"90px\",\r\n                                marginRight: \"3px\",\r\n                                marginLeft: \"3px\",\r\n                                height: \"30px\",\r\n                                borderRadius: \"5px\",\r\n                                borderColor: \"#0d6efd\",\r\n                            }}\r\n                        >\r\n                            {[5, 10, 25, 50].map((pageSize) => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    Show {pageSize}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            style={{\r\n                                marginRight: \"3px\",\r\n                                marginLeft: \"3px\",\r\n                            }}\r\n                            startIcon={<FaAngleDoubleLeft />}\r\n                            onClick={() => gotoPage(0)}\r\n                            disabled={!canPreviousPage}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            style={{\r\n                                marginRight: \"3px\",\r\n                                marginLeft: \"3px\",\r\n                            }}\r\n                            startIcon={<NavigateBeforeIcon />}\r\n                            onClick={() => previousPage()}\r\n                            disabled={!canPreviousPage}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            style={{\r\n                                marginRight: \"3px\",\r\n                                marginLeft: \"3px\",\r\n                            }}\r\n                            startIcon={<NavigateNextIcon />}\r\n                            onClick={() => nextPage()}\r\n                            disabled={!canNextPage}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            style={{ marginLeft: \"3px\" }}\r\n                            startIcon={<FaAngleDoubleRight />}\r\n                            onClick={() => gotoPage(pageCount - 1)}\r\n                            disabled={!canNextPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nCommonReactTable.propTypes = {\r\n    columns: PropTypes.array,\r\n    data: PropTypes.array,\r\n    showPagination: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    tableTitle: PropTypes.string,\r\n    editItem: PropTypes.string,\r\n};\r\n\r\nexport default CommonReactTable;\r\n"]},"metadata":{},"sourceType":"module"}