{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { SET_PRODUCTS } from \"../types/Types\";\nimport axios from \"axios\";\nimport { WEATHER_API_KEY } from \"../../GlobalConstants/ApiKeys\";\nexport const Increment = () => {\n  return {\n    type: \"INCREMENT\"\n  };\n};\n_c = Increment;\nexport const Decrement = () => {\n  return {\n    type: \"DECREMENT;\"\n  };\n};\n_c2 = Decrement;\nexport const Start = () => {\n  return {\n    type: \"START\"\n  };\n};\n_c3 = Start;\nexport const Stop = () => {\n  return {\n    type: \"STOP\"\n  };\n}; //Declaration of City Name\n\n_c4 = Stop;\nlet city = \"Latur\"; //Declaration of Country Name\n\nlet country = \"India\"; //Declaration of Unit Name\n\nlet units = \"metric\";\nlet apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${WEATHER_API_KEY}&units=${units}`;\nexport const FetchProducts = () => {\n  _s();\n\n  const [weatherDetails, setWeatherDetails] = useState(null);\n  return async function (dispatch) {\n    const fetchWeather = () => {\n      axios.get(apiUrl).then(function (response) {\n        setWeatherDetails(response);\n      }).catch(function (error) {});\n    };\n\n    fetchWeather();\n    console.log(fetchWeather);\n    const data = null;\n\n    if (data) {\n      const data = weatherDetails;\n    }\n\n    dispatch(setProducts(data.products));\n  };\n};\n\n_s(FetchProducts, \"HtfWzlfPMfzcDxmwAwQhNJMiRnU=\");\n\n_c5 = FetchProducts;\nexport const setProducts = (products = null) => {\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: []\n  };\n};\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Increment\");\n$RefreshReg$(_c2, \"Decrement\");\n$RefreshReg$(_c3, \"Start\");\n$RefreshReg$(_c4, \"Stop\");\n$RefreshReg$(_c5, \"FetchProducts\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/countdown/Actions/index.js"],"names":["useState","SET_PRODUCTS","axios","WEATHER_API_KEY","Increment","type","Decrement","Start","Stop","city","country","units","apiUrl","FetchProducts","weatherDetails","setWeatherDetails","dispatch","fetchWeather","get","then","response","catch","error","console","log","data","setProducts","products","payload"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;KAAMD,S;AAMb,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAMC,S;AAMb,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAME,K;AAKb,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,SAAO;AACLH,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;;MANaG,I;AAOb,IAAIC,IAAI,GAAG,OAAX,C,CACA;;AACA,IAAIC,OAAO,GAAG,OAAd,C,CACA;;AACA,IAAIC,KAAK,GAAG,QAAZ;AACA,IAAIC,MAAM,GAAI,qDAAoDH,IAAK,IAAGC,OAAQ,UAASP,eAAgB,UAASQ,KAAM,EAA1H;AACA,OAAO,MAAME,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,IAAD,CAApD;AACA,SAAO,gBAAgBgB,QAAhB,EAA0B;AAC/B,UAAMC,YAAY,GAAG,MAAM;AACzBf,MAAAA,KAAK,CACFgB,GADH,CACON,MADP,EAEGO,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBL,QAAAA,iBAAiB,CAACK,QAAD,CAAjB;AACD,OAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB,CAAE,CAL5B;AAMD,KAPD;;AAQAL,IAAAA,YAAY;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACA,UAAMQ,IAAI,GAAG,IAAb;;AACA,QAAIA,IAAJ,EAAU;AACR,YAAMA,IAAI,GAAGX,cAAb;AACD;;AAEDE,IAAAA,QAAQ,CAACU,WAAW,CAACD,IAAI,CAACE,QAAN,CAAZ,CAAR;AACD,GAjBD;AAkBD,CApBM;;GAAMd,a;;MAAAA,a;AAsBb,OAAO,MAAMa,WAAW,GAAG,CAACC,QAAQ,GAAG,IAAZ,KAAqB;AAC9C,MAAIA,QAAJ,EAAc;AACZ,WAAO;AACLtB,MAAAA,IAAI,EAAEJ,YADD;AAEL2B,MAAAA,OAAO,EAAED;AAFJ,KAAP;AAID;;AAED,SAAO;AACLtB,IAAAA,IAAI,EAAEJ,YADD;AAEL2B,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAZM","sourcesContent":["import { useState } from \"react\";\nimport { SET_PRODUCTS } from \"../types/Types\";\nimport axios from \"axios\";\nimport { WEATHER_API_KEY } from \"../../GlobalConstants/ApiKeys\";\nexport const Increment = () => {\n  return {\n    type: \"INCREMENT\",\n  };\n};\n\nexport const Decrement = () => {\n  return {\n    type: \"DECREMENT;\",\n  };\n};\n\nexport const Start = () => {\n  return {\n    type: \"START\",\n  };\n};\nexport const Stop = () => {\n  return {\n    type: \"STOP\",\n  };\n};\n\n//Declaration of City Name\nlet city = \"Latur\";\n//Declaration of Country Name\nlet country = \"India\";\n//Declaration of Unit Name\nlet units = \"metric\";\nlet apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${WEATHER_API_KEY}&units=${units}`;\nexport const FetchProducts = () => {\n  const [weatherDetails, setWeatherDetails] = useState(null);\n  return async function (dispatch) {\n    const fetchWeather = () => {\n      axios\n        .get(apiUrl)\n        .then(function (response) {\n          setWeatherDetails(response);\n        })\n        .catch(function (error) {});\n    };\n    fetchWeather();\n    console.log(fetchWeather);\n    const data = null;\n    if (data) {\n      const data = weatherDetails;\n    }\n\n    dispatch(setProducts(data.products));\n  };\n};\n\nexport const setProducts = (products = null) => {\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products,\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: [],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}