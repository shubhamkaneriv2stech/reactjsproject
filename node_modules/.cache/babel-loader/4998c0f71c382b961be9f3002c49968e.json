{"ast":null,"code":"import*as Yup from\"yup\";import{pinCodeRegExp,passwordRegExp}from\"./RegexCode\";export var validationRules=Yup.object().shape({firstName:Yup.string().min(2,\"*First name must have at least 2 characters\").max(20,\"*First name can't be longer than 20 characters\").required(\"*First name is required\"),lastName:Yup.string().min(2,\"*Last name must have at least 2 characters\").max(20,\"*Last name can't be longer than 20 characters\").required(\"*Last name is required\"),email:Yup.string().email(\"*Must be a valid email address\").required(\"*Email is required\"),city:Yup.string().min(2,\"*City name must have at least 2 characters\").max(20,\"*City name can't be longer than 20 characters\").required(\"*City name is required\"),state:Yup.string().min(2,\"*State name must have at least 2 characters\").max(20,\"*State name can't be longer than 20 characters\").required(\"*State name is required\"),zip:Yup.string(\"Must be number\").min(6,\"*Pincode must be 6 digit\").max(6,\"*Pincode must be 6 digit\").required(\"*Zip Code  is required\").matches(pinCodeRegExp,\"*Must be Positive Number\"),password:Yup.string().required(\"*Password  is required\").matches(passwordRegExp,\"*Password min be 8 Character,Password max be 20 Character,At least one uppercase character ,At least one lowercase character ,At least one digit ,At least one special character  \"),confirmPassword:Yup.string().oneOf([Yup.ref(\"password\"),null],\"*Passwords must match\").required(\"*Confirm Password is required\"),terms:Yup.bool().required().oneOf([true],\"*Terms must be accepted\"),gender:Yup.string().required(\"*Select one Value\"),project:Yup.string().required(\"*Please Select a Project!\"),skills:Yup.array().min(1,\"*Please Select at least One Skill\").required(),details:Yup.string().min(6,\"*Enter Atleast 6 Characters\").max(100,\"*Enter Maximum 100 Characters\").required(\"*Employee details  is required\"),dateOfJoining:Yup.date().min(new Date(\"01/01/2019\"),\" *Must grater than '01/01/2019'\").max(new Date(),\"*Please check the Date of Joining\").required(\"* Date of joining is required\")});","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/FormValidation/ValidationSchema.js"],"names":["Yup","pinCodeRegExp","passwordRegExp","validationRules","object","shape","firstName","string","min","max","required","lastName","email","city","state","zip","matches","password","confirmPassword","oneOf","ref","terms","bool","gender","project","skills","array","details","dateOfJoining","date","Date"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,aAAT,CAAwBC,cAAxB,KAA8C,aAA9C,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB,CAChDC,SAAS,CAAEN,GAAG,CAACO,MAAJ,GACRC,GADQ,CACJ,CADI,CACD,6CADC,EAERC,GAFQ,CAEJ,EAFI,CAEA,gDAFA,EAGRC,QAHQ,CAGC,yBAHD,CADqC,CAKhDC,QAAQ,CAAEX,GAAG,CAACO,MAAJ,GACPC,GADO,CACH,CADG,CACA,4CADA,EAEPC,GAFO,CAEH,EAFG,CAEC,+CAFD,EAGPC,QAHO,CAGE,wBAHF,CALsC,CAShDE,KAAK,CAAEZ,GAAG,CAACO,MAAJ,GACJK,KADI,CACE,gCADF,EAEJF,QAFI,CAEK,oBAFL,CATyC,CAYhDG,IAAI,CAAEb,GAAG,CAACO,MAAJ,GACHC,GADG,CACC,CADD,CACI,4CADJ,EAEHC,GAFG,CAEC,EAFD,CAEK,+CAFL,EAGHC,QAHG,CAGM,wBAHN,CAZ0C,CAgBhDI,KAAK,CAAEd,GAAG,CAACO,MAAJ,GACJC,GADI,CACA,CADA,CACG,6CADH,EAEJC,GAFI,CAEA,EAFA,CAEI,gDAFJ,EAGJC,QAHI,CAGK,yBAHL,CAhByC,CAoBhDK,GAAG,CAAEf,GAAG,CAACO,MAAJ,CAAW,gBAAX,EACFC,GADE,CACE,CADF,CACK,0BADL,EAEFC,GAFE,CAEE,CAFF,CAEK,0BAFL,EAGFC,QAHE,CAGO,wBAHP,EAIFM,OAJE,CAIMf,aAJN,CAIqB,0BAJrB,CApB2C,CAyBhDgB,QAAQ,CAAEjB,GAAG,CAACO,MAAJ,GACPG,QADO,CACE,wBADF,EAEPM,OAFO,CAGNd,cAHM,CAIN,oLAJM,CAzBsC,CA+BhDgB,eAAe,CAAElB,GAAG,CAACO,MAAJ,GACdY,KADc,CACR,CAACnB,GAAG,CAACoB,GAAJ,CAAQ,UAAR,CAAD,CAAsB,IAAtB,CADQ,CACqB,uBADrB,EAEdV,QAFc,CAEL,+BAFK,CA/B+B,CAkChDW,KAAK,CAAErB,GAAG,CAACsB,IAAJ,GAAWZ,QAAX,GAAsBS,KAAtB,CAA4B,CAAC,IAAD,CAA5B,CAAoC,yBAApC,CAlCyC,CAmChDI,MAAM,CAAEvB,GAAG,CAACO,MAAJ,GAAaG,QAAb,CAAsB,mBAAtB,CAnCwC,CAoChDc,OAAO,CAAExB,GAAG,CAACO,MAAJ,GAAaG,QAAb,CAAsB,2BAAtB,CApCuC,CAqChDe,MAAM,CAAEzB,GAAG,CAAC0B,KAAJ,GAAYlB,GAAZ,CAAgB,CAAhB,CAAmB,mCAAnB,EAAwDE,QAAxD,EArCwC,CAuChDiB,OAAO,CAAE3B,GAAG,CAACO,MAAJ,GACNC,GADM,CACF,CADE,CACC,6BADD,EAENC,GAFM,CAEF,GAFE,CAEG,+BAFH,EAGNC,QAHM,CAGG,gCAHH,CAvCuC,CA4ChDkB,aAAa,CAAE5B,GAAG,CAAC6B,IAAJ,GACZrB,GADY,CACR,GAAIsB,CAAAA,IAAJ,CAAS,YAAT,CADQ,CACgB,iCADhB,EAEZrB,GAFY,CAER,GAAIqB,CAAAA,IAAJ,EAFQ,CAEI,mCAFJ,EAGZpB,QAHY,CAGH,+BAHG,CA5CiC,CAAnB,CAAxB","sourcesContent":["import * as Yup from \"yup\";\nimport { pinCodeRegExp, passwordRegExp } from \"./RegexCode\";\n\nexport const validationRules = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"*First name must have at least 2 characters\")\n    .max(20, \"*First name can't be longer than 20 characters\")\n    .required(\"*First name is required\"),\n  lastName: Yup.string()\n    .min(2, \"*Last name must have at least 2 characters\")\n    .max(20, \"*Last name can't be longer than 20 characters\")\n    .required(\"*Last name is required\"),\n  email: Yup.string()\n    .email(\"*Must be a valid email address\")\n    .required(\"*Email is required\"),\n  city: Yup.string()\n    .min(2, \"*City name must have at least 2 characters\")\n    .max(20, \"*City name can't be longer than 20 characters\")\n    .required(\"*City name is required\"),\n  state: Yup.string()\n    .min(2, \"*State name must have at least 2 characters\")\n    .max(20, \"*State name can't be longer than 20 characters\")\n    .required(\"*State name is required\"),\n  zip: Yup.string(\"Must be number\")\n    .min(6, \"*Pincode must be 6 digit\")\n    .max(6, \"*Pincode must be 6 digit\")\n    .required(\"*Zip Code  is required\")\n    .matches(pinCodeRegExp, \"*Must be Positive Number\"),\n  password: Yup.string()\n    .required(\"*Password  is required\")\n    .matches(\n      passwordRegExp,\n      \"*Password min be 8 Character,Password max be 20 Character,At least one uppercase character ,At least one lowercase character ,At least one digit ,At least one special character  \"\n    ),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"*Passwords must match\")\n    .required(\"*Confirm Password is required\"),\n  terms: Yup.bool().required().oneOf([true], \"*Terms must be accepted\"),\n  gender: Yup.string().required(\"*Select one Value\"),\n  project: Yup.string().required(\"*Please Select a Project!\"),\n  skills: Yup.array().min(1, \"*Please Select at least One Skill\").required(),\n\n  details: Yup.string()\n    .min(6, \"*Enter Atleast 6 Characters\")\n    .max(100, \"*Enter Maximum 100 Characters\")\n    .required(\"*Employee details  is required\"),\n\n  dateOfJoining: Yup.date()\n    .min(new Date(\"01/01/2019\"), \" *Must grater than '01/01/2019'\")\n    .max(new Date(), \"*Please check the Date of Joining\")\n    .required(\"* Date of joining is required\"),\n});\n"]},"metadata":{},"sourceType":"module"}