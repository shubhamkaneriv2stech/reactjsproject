{"ast":null,"code":"import { SET_PRODUCTS } from \"../types/Types\";\nimport axios from \"axios\";\nexport const Increment = () => {\n  return {\n    type: \"INCREMENT\"\n  };\n};\n_c = Increment;\nexport const Decrement = () => {\n  return {\n    type: \"DECREMENT;\"\n  };\n};\n_c2 = Decrement;\nexport const Start = () => {\n  return {\n    type: \"START\"\n  };\n};\n_c3 = Start;\nexport const Stop = () => {\n  return {\n    type: \"STOP\"\n  };\n}; //Declaration of City Name\n\n_c4 = Stop;\nlet city = \"Latur\"; //Declaration of Country Name\n\nlet country = \"India\"; //Declaration of Unit Name\n\nlet units = \"metric\";\nlet apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${WEATHER_API_KEY}&units=${units}`;\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    const fetchWeather = () => {\n      axios.get(apiUrl).then(function (response) {\n        if (mounted) {\n          setWeatherDetails(response); // console.log(response);\n\n          setLoader(false);\n        }\n      }).catch(function (error) {\n        // handle error\n        //   console.log(error);\n        setErrorMsg(\"Data Not Available\");\n        setLoader(false);\n      });\n    };\n\n    fetchWeather();\n    const data = await res.json();\n    dispatch(setProducts(data.products));\n  };\n};\nexport const setProducts = (products = null) => {\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: []\n  };\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Increment\");\n$RefreshReg$(_c2, \"Decrement\");\n$RefreshReg$(_c3, \"Start\");\n$RefreshReg$(_c4, \"Stop\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/countdown/Actions/index.js"],"names":["SET_PRODUCTS","axios","Increment","type","Decrement","Start","Stop","city","country","units","apiUrl","WEATHER_API_KEY","fetchProducts","dispatch","fetchWeather","get","then","response","mounted","setWeatherDetails","setLoader","catch","error","setErrorMsg","data","res","json","setProducts","products","payload"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;KAAMD,S;AAMb,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAMC,S;AAMb,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAME,K;AAKb,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,SAAO;AACLH,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAKP;;MALaG,I;AAMb,IAAIC,IAAI,GAAG,OAAX,C,CACA;;AACA,IAAIC,OAAO,GAAG,OAAd,C,CACA;;AACA,IAAIC,KAAK,GAAG,QAAZ;AACA,IAAIC,MAAM,GAAI,qDAAoDH,IAAK,IAAGC,OAAQ,UAASG,eAAgB,UAASF,KAAM,EAA1H;AACA,OAAO,MAAMG,aAAa,GAAG,MAAM;AACjC,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,UAAMC,YAAY,GAAG,MAAM;AACzBb,MAAAA,KAAK,CACFc,GADH,CACOL,MADP,EAEGM,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,YAAIC,OAAJ,EAAa;AACXC,UAAAA,iBAAiB,CAACF,QAAD,CAAjB,CADW,CAEX;;AACAG,UAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,OARH,EASGC,KATH,CASS,UAAUC,KAAV,EAAiB;AACtB;AACA;AACAC,QAAAA,WAAW,CAAC,oBAAD,CAAX;AACAH,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAdH;AAeD,KAhBD;;AAiBAN,IAAAA,YAAY;AACZ,UAAMU,IAAI,GAAG,MAAMC,GAAG,CAACC,IAAJ,EAAnB;AAEAb,IAAAA,QAAQ,CAACc,WAAW,CAACH,IAAI,CAACI,QAAN,CAAZ,CAAR;AACD,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAMD,WAAW,GAAG,CAACC,QAAQ,GAAG,IAAZ,KAAqB;AAC9C,MAAIA,QAAJ,EAAc;AACZ,WAAO;AACLzB,MAAAA,IAAI,EAAEH,YADD;AAEL6B,MAAAA,OAAO,EAAED;AAFJ,KAAP;AAID;;AAED,SAAO;AACLzB,IAAAA,IAAI,EAAEH,YADD;AAEL6B,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAZM","sourcesContent":["import { SET_PRODUCTS } from \"../types/Types\";\nimport axios from \"axios\";\nexport const Increment = () => {\n  return {\n    type: \"INCREMENT\",\n  };\n};\n\nexport const Decrement = () => {\n  return {\n    type: \"DECREMENT;\",\n  };\n};\n\nexport const Start = () => {\n  return {\n    type: \"START\",\n  };\n};\nexport const Stop = () => {\n  return {\n    type: \"STOP\",\n  };\n};\n//Declaration of City Name\nlet city = \"Latur\";\n//Declaration of Country Name\nlet country = \"India\";\n//Declaration of Unit Name\nlet units = \"metric\";\nlet apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${WEATHER_API_KEY}&units=${units}`;\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    const fetchWeather = () => {\n      axios\n        .get(apiUrl)\n        .then(function (response) {\n          if (mounted) {\n            setWeatherDetails(response);\n            // console.log(response);\n            setLoader(false);\n          }\n        })\n        .catch(function (error) {\n          // handle error\n          //   console.log(error);\n          setErrorMsg(\"Data Not Available\");\n          setLoader(false);\n        });\n    };\n    fetchWeather();\n    const data = await res.json();\n\n    dispatch(setProducts(data.products));\n  };\n};\n\nexport const setProducts = (products = null) => {\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products,\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: [],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}