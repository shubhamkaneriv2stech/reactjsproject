{"ast":null,"code":"import { SET_PRODUCTS } from \"../types/Types\";\nimport axios from \"axios\";\nimport { WEATHER_API_KEY } from \"../../GlobalConstants/ApiKeys\";\nexport const Increment = () => {\n  return {\n    type: \"INCREMENT\"\n  };\n};\n_c = Increment;\nexport const Decrement = () => {\n  return {\n    type: \"DECREMENT;\"\n  };\n};\n_c2 = Decrement;\nexport const Start = () => {\n  return {\n    type: \"START\"\n  };\n};\n_c3 = Start;\nexport const Stop = () => {\n  return {\n    type: \"STOP\"\n  };\n}; //Declaration of City Name\n\n_c4 = Stop;\nlet city = \"Latur\"; //Declaration of Country Name\n\nlet country = \"India\"; //Declaration of Unit Name\n\nlet units = \"metric\"; //Declaration of APi URL\n\nlet apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${WEATHER_API_KEY}&units=${units}`;\nexport const fetchProducts = () => {\n  return dispatch => {\n    // const res = async () => {\n    //   try {\n    //     const response = await axios.get(apiUrl);\n    //     console.log(response);\n    //     return response;\n    //   } catch (error) {\n    //     console.error(error);\n    //   }\n    axios.get(apiUrl).then(function (response) {\n      const products = response.data;\n      dispatch(setProducts(data.data));\n    }).catch(function (error) {//   console.log(error);\n    });\n  };\n};\nexport const setProducts = (products = null) => {\n  console.log(products);\n\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: []\n  };\n};\nuseEffect(() => {\n  let mounted = true; //Function For Getting Api Data And Setting in WeatherDetails State\n\n  const fetchWeather = () => {\n    axios.get(apiUrl).then(function (response) {\n      if (mounted) {\n        setWeatherDetails(response); // console.log(response);\n\n        setLoader(false);\n      }\n    }).catch(function (error) {\n      // handle error\n      //   console.log(error);\n      setErrorMsg(\"Data Not Available\");\n      setLoader(false);\n    });\n  };\n\n  fetchWeather();\n  return function cleanup() {\n    mounted = false;\n  };\n}, []);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Increment\");\n$RefreshReg$(_c2, \"Decrement\");\n$RefreshReg$(_c3, \"Start\");\n$RefreshReg$(_c4, \"Stop\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/countdown/Actions/index.js"],"names":["SET_PRODUCTS","axios","WEATHER_API_KEY","Increment","type","Decrement","Start","Stop","city","country","units","apiUrl","fetchProducts","dispatch","get","then","response","products","data","setProducts","catch","error","console","log","payload","useEffect","mounted","fetchWeather","setWeatherDetails","setLoader","setErrorMsg","cleanup"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;KAAMD,S;AAMb,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAMC,S;AAMb,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAME,K;AAKb,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,SAAO;AACLH,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAKP;;MALaG,I;AAMb,IAAIC,IAAI,GAAG,OAAX,C,CACA;;AACA,IAAIC,OAAO,GAAG,OAAd,C,CACA;;AACA,IAAIC,KAAK,GAAG,QAAZ,C,CACA;;AACA,IAAIC,MAAM,GAAI,qDAAoDH,IAAK,IAAGC,OAAQ,UAASP,eAAgB,UAASQ,KAAM,EAA1H;AAEA,OAAO,MAAME,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAc;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAZ,IAAAA,KAAK,CACFa,GADH,CACOH,MADP,EAEGI,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;AACAL,MAAAA,QAAQ,CAACM,WAAW,CAACD,IAAI,CAACA,IAAN,CAAZ,CAAR;AACD,KALH,EAMGE,KANH,CAMS,UAAUC,KAAV,EAAiB,CACtB;AACD,KARH;AASD,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMF,WAAW,GAAG,CAACF,QAAQ,GAAG,IAAZ,KAAqB;AAC9CK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,MAAIA,QAAJ,EAAc;AACZ,WAAO;AACLb,MAAAA,IAAI,EAAEJ,YADD;AAELwB,MAAAA,OAAO,EAAEP;AAFJ,KAAP;AAID;;AAED,SAAO;AACLb,IAAAA,IAAI,EAAEJ,YADD;AAELwB,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAbM;AAcPC,SAAS,CAAC,MAAM;AACd,MAAIC,OAAO,GAAG,IAAd,CADc,CAEd;;AACA,QAAMC,YAAY,GAAG,MAAM;AACzB1B,IAAAA,KAAK,CACFa,GADH,CACOH,MADP,EAEGI,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,UAAIU,OAAJ,EAAa;AACXE,QAAAA,iBAAiB,CAACZ,QAAD,CAAjB,CADW,CAEX;;AACAa,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,KARH,EASGT,KATH,CASS,UAAUC,KAAV,EAAiB;AACtB;AACA;AACAS,MAAAA,WAAW,CAAC,oBAAD,CAAX;AACAD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAdH;AAeD,GAhBD;;AAiBAF,EAAAA,YAAY;AACZ,SAAO,SAASI,OAAT,GAAmB;AACxBL,IAAAA,OAAO,GAAG,KAAV;AACD,GAFD;AAGD,CAxBQ,EAwBN,EAxBM,CAAT","sourcesContent":["import { SET_PRODUCTS } from \"../types/Types\";\nimport axios from \"axios\";\nimport { WEATHER_API_KEY } from \"../../GlobalConstants/ApiKeys\";\nexport const Increment = () => {\n  return {\n    type: \"INCREMENT\",\n  };\n};\n\nexport const Decrement = () => {\n  return {\n    type: \"DECREMENT;\",\n  };\n};\n\nexport const Start = () => {\n  return {\n    type: \"START\",\n  };\n};\nexport const Stop = () => {\n  return {\n    type: \"STOP\",\n  };\n};\n//Declaration of City Name\nlet city = \"Latur\";\n//Declaration of Country Name\nlet country = \"India\";\n//Declaration of Unit Name\nlet units = \"metric\";\n//Declaration of APi URL\nlet apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${WEATHER_API_KEY}&units=${units}`;\n\nexport const fetchProducts = () => {\n  return (dispatch) => {\n    // const res = async () => {\n    //   try {\n    //     const response = await axios.get(apiUrl);\n    //     console.log(response);\n    //     return response;\n    //   } catch (error) {\n    //     console.error(error);\n    //   }\n\n    axios\n      .get(apiUrl)\n      .then(function (response) {\n        const products = response.data;\n        dispatch(setProducts(data.data));\n      })\n      .catch(function (error) {\n        //   console.log(error);\n      });\n  };\n};\n\nexport const setProducts = (products = null) => {\n  console.log(products);\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products,\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: [],\n  };\n};\nuseEffect(() => {\n  let mounted = true;\n  //Function For Getting Api Data And Setting in WeatherDetails State\n  const fetchWeather = () => {\n    axios\n      .get(apiUrl)\n      .then(function (response) {\n        if (mounted) {\n          setWeatherDetails(response);\n          // console.log(response);\n          setLoader(false);\n        }\n      })\n      .catch(function (error) {\n        // handle error\n        //   console.log(error);\n        setErrorMsg(\"Data Not Available\");\n        setLoader(false);\n      });\n  };\n  fetchWeather();\n  return function cleanup() {\n    mounted = false;\n  };\n}, []);\n"]},"metadata":{},"sourceType":"module"}