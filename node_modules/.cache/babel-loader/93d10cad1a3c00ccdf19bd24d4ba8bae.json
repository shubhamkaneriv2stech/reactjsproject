{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/ReactJs/RouterAssignment/src/components/PostsManagement/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useMemo } from \"react\";\nimport axios from \"axios\";\nimport CommonTable from \"../ReusableTable/CommonTable\";\nimport { COLUMNS } from \"./Columns\";\nimport { SubRowsColumns } from \"./SubRowsColumns\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CommonReactTable from \"../common/CommonReactTable\";\nimport SubTable from \"./SubTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  //Columns For Table\n  const columns = useMemo(() => COLUMNS, []);\n  const subRowsColumns = useMemo(() => SubRowsColumns, []); //State For Storing JsonPlaceholder Api  data\n\n  const [users, setUsers] = useState([]); // State For the Loader Part\n\n  const [loader, setLoader] = useState(true); //State for the ErrorMsg When Something Wrong In Fetching Api Data\n\n  const [errorMsg, setErrorMsg] = useState(null); //Declaration of APi URL\n\n  let apiUrl = `https://jsonplaceholder.typicode.com/posts`; //Function For Getting Api Data And Setting in users State\n  // Used for All Clean up When Component is Unmounted And mounted\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchUser = () => {\n      axios.get(apiUrl).then(function (response) {\n        if (mounted) {\n          setUsers(response.data);\n          console.log(response);\n          setLoader(false);\n        }\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n        setErrorMsg(\"Data Not Available\");\n        setLoader(false);\n      });\n    };\n\n    fetchUser();\n    return function cleanup() {\n      mounted = false;\n    };\n  }, []);\n  console.log(users);\n  const [comments, setComments] = useState([]);\n\n  const subrowcalling = row => {\n    axios.get(`${apiUrl}/${row.original.id}/comments`).then(function (response) {\n      setComments(response.data);\n      setLoader(false);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n      setLoader(false);\n    });\n  };\n\n  const renderRowSubComponent = row => {\n    return /*#__PURE__*/_jsxDEV(SubTable, {\n      comments: comments,\n      subRowsColumns: subRowsColumns,\n      subrowcalling: subrowcalling(row)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this); // return (\n    //   <>\n    //     {!loader ? (\n    //       <>\n    //         <CommonReactTable data={comments} columns={subRowsColumns} />;\n    //       </>\n    //     ) : (\n    //       <>\n    //         <div\n    //           style={{\n    //             padding: \"200px\",\n    //             color: \"red\",\n    //             textAlign: \"center\",\n    //           }}\n    //         >\n    //           <CircularProgress color=\"secondary\" />\n    //           <h1>Loading Data Please wait...</h1>\n    //         </div>\n    //       </>\n    //     )}\n    //   </>\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [\" \", errorMsg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), loader ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"200px\",\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading Data Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: users && /*#__PURE__*/_jsxDEV(CommonReactTable, {\n        data: users,\n        columns: columns,\n        tableTitle: \"Post Management Table\",\n        showPagination: false,\n        renderRowSubComponent: renderRowSubComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"U4UKZTNUJUwOy4AFktYGo2bYOzw=\");\n\n_c = Posts;\nexport default Posts; // useEffect(() => {\n//     const source = axios.CancelToken.source();\n//     const fetchUsers = async () => {\n//         try {\n//             await axios.get(\"/users\", {\n//                 cancelToken: source.token,\n//             });\n//             // ...\n//         } catch (error) {\n//             if (Axios.isCancel(error)) {\n//             } else {\n//                 throw error;\n//             }\n//         }\n//     };\n//     fetchData();\n//     return () => {\n//         source.cancel();\n//     };\n// }, []);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/PostsManagement/Posts.js"],"names":["useEffect","useState","useMemo","axios","CommonTable","COLUMNS","SubRowsColumns","CircularProgress","CommonReactTable","SubTable","Posts","columns","subRowsColumns","users","setUsers","loader","setLoader","errorMsg","setErrorMsg","apiUrl","mounted","fetchUser","get","then","response","data","console","log","catch","error","cleanup","comments","setComments","subrowcalling","row","original","id","renderRowSubComponent","padding","color","textAlign"],"mappings":"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","sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport CommonTable from \"../ReusableTable/CommonTable\";\r\nimport { COLUMNS } from \"./Columns\";\r\nimport { SubRowsColumns } from \"./SubRowsColumns\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CommonReactTable from \"../common/CommonReactTable\";\r\nimport SubTable from \"./SubTable\";\r\nconst Posts = () => {\r\n  //Columns For Table\r\n  const columns = useMemo(() => COLUMNS, []);\r\n\r\n  const subRowsColumns = useMemo(() => SubRowsColumns, []);\r\n  //State For Storing JsonPlaceholder Api  data\r\n  const [users, setUsers] = useState([]);\r\n  // State For the Loader Part\r\n  const [loader, setLoader] = useState(true);\r\n  //State for the ErrorMsg When Something Wrong In Fetching Api Data\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  //Declaration of APi URL\r\n  let apiUrl = `https://jsonplaceholder.typicode.com/posts`;\r\n  //Function For Getting Api Data And Setting in users State\r\n\r\n  // Used for All Clean up When Component is Unmounted And mounted\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchUser = () => {\r\n      axios\r\n        .get(apiUrl)\r\n        .then(function (response) {\r\n          if (mounted) {\r\n            setUsers(response.data);\r\n            console.log(response);\r\n            setLoader(false);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n          setErrorMsg(\"Data Not Available\");\r\n\r\n          setLoader(false);\r\n        });\r\n    };\r\n    fetchUser();\r\n    return function cleanup() {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  console.log(users);\r\n\r\n  const [comments, setComments] = useState([]);\r\n  const subrowcalling = (row) => {\r\n    axios\r\n      .get(`${apiUrl}/${row.original.id}/comments`)\r\n      .then(function (response) {\r\n        setComments(response.data);\r\n        setLoader(false);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n        setLoader(false);\r\n      });\r\n  };\r\n  const renderRowSubComponent = (row) => {\r\n    return (\r\n      <SubTable\r\n        comments={comments}\r\n        subRowsColumns={subRowsColumns}\r\n        subrowcalling={subrowcalling(row)}\r\n      />\r\n    );\r\n\r\n    // return (\r\n    //   <>\r\n    //     {!loader ? (\r\n    //       <>\r\n    //         <CommonReactTable data={comments} columns={subRowsColumns} />;\r\n    //       </>\r\n    //     ) : (\r\n    //       <>\r\n    //         <div\r\n    //           style={{\r\n    //             padding: \"200px\",\r\n    //             color: \"red\",\r\n    //             textAlign: \"center\",\r\n    //           }}\r\n    //         >\r\n    //           <CircularProgress color=\"secondary\" />\r\n    //           <h1>Loading Data Please wait...</h1>\r\n    //         </div>\r\n    //       </>\r\n    //     )}\r\n    //   </>\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"text-center\"> {errorMsg}</div>\r\n      {loader ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              padding: \"200px\",\r\n              color: \"red\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress color=\"secondary\" />\r\n            <h1>Loading Data Please wait...</h1>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {users && (\r\n            <CommonReactTable\r\n              data={users}\r\n              columns={columns}\r\n              tableTitle={\"Post Management Table\"}\r\n              showPagination={false}\r\n              renderRowSubComponent={renderRowSubComponent}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n// useEffect(() => {\r\n//     const source = axios.CancelToken.source();\r\n\r\n//     const fetchUsers = async () => {\r\n//         try {\r\n//             await axios.get(\"/users\", {\r\n//                 cancelToken: source.token,\r\n//             });\r\n//             // ...\r\n//         } catch (error) {\r\n//             if (Axios.isCancel(error)) {\r\n//             } else {\r\n//                 throw error;\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     fetchData();\r\n\r\n//     return () => {\r\n//         source.cancel();\r\n//     };\r\n// }, []);\r\n"]},"metadata":{},"sourceType":"module"}