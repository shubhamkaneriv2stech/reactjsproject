{"ast":null,"code":"import _slicedToArray from\"/home/v2stech/ReactJs/RouterAssignment (copy)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState,useMemo}from\"react\";import axios from\"axios\";import{COLUMNS}from\"./Columns\";import{SubRowsColumns}from\"./SubRowsColumns\";import CircularProgress from\"@material-ui/core/CircularProgress\";import CommonReactTable from\"../common/CommonReactTable\";import{fetchSubPostsApiData}from\"../countdown/Actions/SubrowPostmanagementindex\";import{useDispatch}from\"react-redux\";import{useSelector}from\"react-redux\";import Subtable2 from\"./Subtable2\";import{Fragment}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Posts=function Posts(){var postsApiData=useSelector(function(state){return state.postsApiReducer;});console.log(postsApiData,\" api calling\");console.log(\" api calling\");//Columns For Table\nvar columns=useMemo(function(){return COLUMNS;},[]);var subRowsColumns=useMemo(function(){return SubRowsColumns;},[]);//State For Storing JsonPlaceholder Api  data\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];// State For the Loader Part\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loader=_useState4[0],setLoader=_useState4[1];//State for the ErrorMsg When Something Wrong In Fetching Api Data\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),errorMsg=_useState6[0],setErrorMsg=_useState6[1];//Declaration of APi URL\nvar apiUrl=\"https://jsonplaceholder.typicode.com/posts\";//Function For Getting Api Data And Setting in users State\n// Used for All Clean up When Component is Unmounted And mounted\n// useEffect(() => {\n//   let mounted = true;\n//   const fetchUser = () => {\n//     axios\n//       .get(apiUrl)\n//       .then(function (response) {\n//         if (mounted) {\n//           setUsers(response.data);\n//           console.log(response.data);\n//           setLoader(false);\n//         }\n//       })\n//       .catch(function (error) {\n//         // handle error\n//         console.log(error);\n//         setErrorMsg(\"Data Not Available\");\n//         setLoader(false);\n//       });\n//   };\n//   fetchUser();\n//   return function cleanup() {\n//     mounted = false;\n//   };\n// }, []);\n// //Passing Row And subRowsColumns to SubTable Component as Props\n// const renderRowSubComponent = (row) => {\n//   return <SubTable subRowsColumns={subRowsColumns} row={row} />;\n// };\n//Passing Row And subRowsColumns to SubTable Component as Props\nvar dispatch=useDispatch();var renderRowSubComponent=function renderRowSubComponent(row){dispatch(fetchSubPostsApiData(row));return/*#__PURE__*/_jsx(Subtable2,{});};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[\" \",errorMsg]}),loader?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"200px\",color:\"red\",textAlign:\"center\"},children:[/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Loading Data Please wait...\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{visibility:\"hidden\"},children:setTimeout(function(){setLoader(false);},1000)})]}):/*#__PURE__*/_jsx(Fragment,{children:postsApiData&&/*#__PURE__*/_jsx(CommonReactTable,{data:postsApiData,columns:columns,tableTitle:\"Post Management Table\",showPagination:false,renderRowSubComponent:renderRowSubComponent})})]});};export default Posts;// useEffect(() => {\n//     const source = axios.CancelToken.source();\n//     const fetchUsers = async () => {\n//         try {\n//             await axios.get(\"/users\", {\n//                 cancelToken: source.token,\n//             });\n//             // ...\n//         } catch (error) {\n//             if (Axios.isCancel(error)) {\n//             } else {\n//                 throw error;\n//             }\n//         }\n//     };\n//     fetchData();\n//     return () => {\n//         source.cancel();\n//     };\n// }, []);","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/PostsManagement/Posts.js"],"names":["useEffect","useState","useMemo","axios","COLUMNS","SubRowsColumns","CircularProgress","CommonReactTable","fetchSubPostsApiData","useDispatch","useSelector","Subtable2","Fragment","Posts","postsApiData","state","postsApiReducer","console","log","columns","subRowsColumns","users","setUsers","loader","setLoader","errorMsg","setErrorMsg","apiUrl","dispatch","renderRowSubComponent","row","padding","color","textAlign","visibility","setTimeout"],"mappings":"oKAAA,OAASA,SAAT,CAAoBC,QAApB,CAA8BC,OAA9B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,OAASC,oBAAT,KAAqC,gDAArC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAMC,CAAAA,YAAY,CAAGJ,WAAW,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACC,eAAjB,EAAD,CAAhC,CAEAC,OAAO,CAACC,GAAR,CAAYJ,YAAZ,CAA0B,cAA1B,EACAG,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA;AACA,GAAMC,CAAAA,OAAO,CAAGjB,OAAO,CAAC,iBAAME,CAAAA,OAAN,EAAD,CAAgB,EAAhB,CAAvB,CACA,GAAMgB,CAAAA,cAAc,CAAGlB,OAAO,CAAC,iBAAMG,CAAAA,cAAN,EAAD,CAAuB,EAAvB,CAA9B,CACA;AACA,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOoB,KAAP,eAAcC,QAAd,eACA;AACA,eAA4BrB,QAAQ,CAAC,IAAD,CAApC,yCAAOsB,MAAP,eAAeC,SAAf,eACA;AACA,eAAgCvB,QAAQ,CAAC,IAAD,CAAxC,yCAAOwB,QAAP,eAAiBC,WAAjB,eACA;AACA,GAAIC,CAAAA,MAAM,6CAAV,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,GAAMC,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CACA,GAAMoB,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,GAAD,CAAS,CACrCF,QAAQ,CAACpB,oBAAoB,CAACsB,GAAD,CAArB,CAAR,CACA,mBAAO,KAAC,SAAD,IAAP,CACD,CAHD,CAKA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,aAAK,SAAS,CAAC,aAAf,eAA+BL,QAA/B,GADF,CAEGF,MAAM,cACL,MAAC,QAAD,yBACE,aACE,KAAK,CAAE,CACLQ,OAAO,CAAE,OADJ,CAELC,KAAK,CAAE,KAFF,CAGLC,SAAS,CAAE,QAHN,CADT,wBAOE,KAAC,gBAAD,EAAkB,KAAK,CAAC,WAAxB,EAPF,cAQE,mDARF,GADF,cAYE,YAAK,KAAK,CAAE,CAAEC,UAAU,CAAE,QAAd,CAAZ,UACGC,UAAU,CAAC,UAAM,CAChBX,SAAS,CAAC,KAAD,CAAT,CACD,CAFU,CAER,IAFQ,CADb,EAZF,GADK,cAoBL,KAAC,QAAD,WACGV,YAAY,eACX,KAAC,gBAAD,EACE,IAAI,CAAEA,YADR,CAEE,OAAO,CAAEK,OAFX,CAGE,UAAU,CAAE,uBAHd,CAIE,cAAc,CAAE,KAJlB,CAKE,qBAAqB,CAAEU,qBALzB,EAFJ,EAtBJ,GADF,CAqCD,CA9FD,CAgGA,cAAehB,CAAAA,KAAf,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA","sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { COLUMNS } from \"./Columns\";\r\nimport { SubRowsColumns } from \"./SubRowsColumns\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CommonReactTable from \"../common/CommonReactTable\";\r\nimport { fetchSubPostsApiData } from \"../countdown/Actions/SubrowPostmanagementindex\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Subtable2 from \"./Subtable2\";\r\nimport { Fragment } from \"react\";\r\nconst Posts = () => {\r\n  const postsApiData = useSelector((state) => state.postsApiReducer);\r\n\r\n  console.log(postsApiData, \" api calling\");\r\n  console.log(\" api calling\");\r\n  //Columns For Table\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const subRowsColumns = useMemo(() => SubRowsColumns, []);\r\n  //State For Storing JsonPlaceholder Api  data\r\n  const [users, setUsers] = useState([]);\r\n  // State For the Loader Part\r\n  const [loader, setLoader] = useState(true);\r\n  //State for the ErrorMsg When Something Wrong In Fetching Api Data\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  //Declaration of APi URL\r\n  let apiUrl = `https://jsonplaceholder.typicode.com/posts`;\r\n  //Function For Getting Api Data And Setting in users State\r\n\r\n  // Used for All Clean up When Component is Unmounted And mounted\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n  //   const fetchUser = () => {\r\n  //     axios\r\n  //       .get(apiUrl)\r\n  //       .then(function (response) {\r\n  //         if (mounted) {\r\n  //           setUsers(response.data);\r\n  //           console.log(response.data);\r\n  //           setLoader(false);\r\n  //         }\r\n  //       })\r\n  //       .catch(function (error) {\r\n  //         // handle error\r\n  //         console.log(error);\r\n  //         setErrorMsg(\"Data Not Available\");\r\n\r\n  //         setLoader(false);\r\n  //       });\r\n  //   };\r\n  //   fetchUser();\r\n  //   return function cleanup() {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  // //Passing Row And subRowsColumns to SubTable Component as Props\r\n  // const renderRowSubComponent = (row) => {\r\n  //   return <SubTable subRowsColumns={subRowsColumns} row={row} />;\r\n  // };\r\n\r\n  //Passing Row And subRowsColumns to SubTable Component as Props\r\n  const dispatch = useDispatch();\r\n  const renderRowSubComponent = (row) => {\r\n    dispatch(fetchSubPostsApiData(row));\r\n    return <Subtable2 />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"text-center\"> {errorMsg}</div>\r\n      {loader ? (\r\n        <Fragment>\r\n          <div\r\n            style={{\r\n              padding: \"200px\",\r\n              color: \"red\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress color=\"secondary\" />\r\n            <h1>Loading Data Please wait...</h1>\r\n          </div>\r\n\r\n          <div style={{ visibility: \"hidden\" }}>\r\n            {setTimeout(() => {\r\n              setLoader(false);\r\n            }, 1000)}\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          {postsApiData && (\r\n            <CommonReactTable\r\n              data={postsApiData}\r\n              columns={columns}\r\n              tableTitle={\"Post Management Table\"}\r\n              showPagination={false}\r\n              renderRowSubComponent={renderRowSubComponent}\r\n            />\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n// useEffect(() => {\r\n//     const source = axios.CancelToken.source();\r\n\r\n//     const fetchUsers = async () => {\r\n//         try {\r\n//             await axios.get(\"/users\", {\r\n//                 cancelToken: source.token,\r\n//             });\r\n//             // ...\r\n//         } catch (error) {\r\n//             if (Axios.isCancel(error)) {\r\n//             } else {\r\n//                 throw error;\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     fetchData();\r\n\r\n//     return () => {\r\n//         source.cancel();\r\n//     };\r\n// }, []);\r\n"]},"metadata":{},"sourceType":"module"}