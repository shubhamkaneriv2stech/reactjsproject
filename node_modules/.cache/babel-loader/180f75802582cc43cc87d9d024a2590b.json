{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { SET_PRODUCTS } from \"../types/Types\";\nimport axios from \"axios\";\nimport { WEATHER_API_KEY } from \"../../GlobalConstants/ApiKeys\";\n\nconst FetchProducts = () => {\n  _s();\n\n  //State For Storing Weather Api  data\n  const [weatherDetails, setWeatherDetails] = useState(null); //Declaration of City Name\n\n  let city = \"Latur\"; //Declaration of Country Name\n\n  let country = \"India\"; //Declaration of Unit Name\n\n  let units = \"metric\";\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${WEATHER_API_KEY}&units=${units}`;\n  return async function (dispatch) {\n    const fetchWeather = () => {\n      axios.get(apiUrl).then(function (response) {\n        setWeatherDetails(response);\n      }).catch(function (error) {});\n    };\n\n    fetchWeather();\n    console.log(fetchWeather);\n\n    if (weatherDetails) {\n      dispatch(setProducts(weatherDetails));\n    }\n  };\n};\n\n_s(FetchProducts, \"HtfWzlfPMfzcDxmwAwQhNJMiRnU=\");\n\n_c = FetchProducts;\nexport default FetchProducts;\nexport const setProducts = (products = null) => {\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: []\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchProducts\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/countdown/Reducers/FetchProducts.js"],"names":["useState","SET_PRODUCTS","axios","WEATHER_API_KEY","FetchProducts","weatherDetails","setWeatherDetails","city","country","units","apiUrl","dispatch","fetchWeather","get","then","response","catch","error","console","log","setProducts","products","type","payload"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD,CAF0B,CAG1B;;AACA,MAAIO,IAAI,GAAG,OAAX,CAJ0B,CAK1B;;AACA,MAAIC,OAAO,GAAG,OAAd,CAN0B,CAO1B;;AACA,MAAIC,KAAK,GAAG,QAAZ;AACA,MAAIC,MAAM,GAAI,qDAAoDH,IAAK,IAAGC,OAAQ,UAASL,eAAgB,UAASM,KAAM,EAA1H;AAEA,SAAO,gBAAgBE,QAAhB,EAA0B;AAC/B,UAAMC,YAAY,GAAG,MAAM;AACzBV,MAAAA,KAAK,CACFW,GADH,CACOH,MADP,EAEGI,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBT,QAAAA,iBAAiB,CAACS,QAAD,CAAjB;AACD,OAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB,CAAE,CAL5B;AAMD,KAPD;;AAQAL,IAAAA,YAAY;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;;AAEA,QAAIP,cAAJ,EAAoB;AAClBM,MAAAA,QAAQ,CAACS,WAAW,CAACf,cAAD,CAAZ,CAAR;AACD;AACF,GAfD;AAgBD,CA3BD;;GAAMD,a;;KAAAA,a;AA6BN,eAAeA,aAAf;AACA,OAAO,MAAMgB,WAAW,GAAG,CAACC,QAAQ,GAAG,IAAZ,KAAqB;AAC9C,MAAIA,QAAJ,EAAc;AACZ,WAAO;AACLC,MAAAA,IAAI,EAAErB,YADD;AAELsB,MAAAA,OAAO,EAAEF;AAFJ,KAAP;AAID;;AAED,SAAO;AACLC,IAAAA,IAAI,EAAErB,YADD;AAELsB,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAZM","sourcesContent":["import { useState } from \"react\";\nimport { SET_PRODUCTS } from \"../types/Types\";\nimport axios from \"axios\";\nimport { WEATHER_API_KEY } from \"../../GlobalConstants/ApiKeys\";\nconst FetchProducts = () => {\n  //State For Storing Weather Api  data\n  const [weatherDetails, setWeatherDetails] = useState(null);\n  //Declaration of City Name\n  let city = \"Latur\";\n  //Declaration of Country Name\n  let country = \"India\";\n  //Declaration of Unit Name\n  let units = \"metric\";\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${WEATHER_API_KEY}&units=${units}`;\n\n  return async function (dispatch) {\n    const fetchWeather = () => {\n      axios\n        .get(apiUrl)\n        .then(function (response) {\n          setWeatherDetails(response);\n        })\n        .catch(function (error) {});\n    };\n    fetchWeather();\n    console.log(fetchWeather);\n\n    if (weatherDetails) {\n      dispatch(setProducts(weatherDetails));\n    }\n  };\n};\n\nexport default FetchProducts;\nexport const setProducts = (products = null) => {\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products,\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: [],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}