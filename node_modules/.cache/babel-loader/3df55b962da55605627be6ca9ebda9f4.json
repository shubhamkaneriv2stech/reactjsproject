{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/FormValidation/FormValidation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pinCodeRegExp = /^[1-9][0-9]*$/;\nconst passwordRegExp = /^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[a-zA-Z!#$@^%&? \"])[a-zA-Z0-9!#$@^%&?]{8,20}$/;\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"*First Name must have at least 2 characters\").max(20, \"*First Name can't be longer than 20 characters\").required(\"*First Name is required\"),\n  lastName: Yup.string().min(2, \"*Last Name must have at least 2 characters\").max(20, \"*Last Name can't be longer than 20 characters\").required(\"*Last Name is required\"),\n  email: Yup.string().email(\"*Must be a valid email address\").max(20, \"*Email must be less than 20 characters\").required(\"*Email is required\"),\n  city: Yup.string().min(2, \"*City Name must have at least 2 characters\").max(20, \"*City Name can't be longer than 20 characters\").required(\"*City Name is required\"),\n  state: Yup.string().min(2, \"*State Name must have at least 2 characters\").max(20, \"*State Name can't be longer than 20 characters\").required(\"*State Name is required\"),\n  zip: Yup.string(\"Must be number\").min(6, \"*Pincode must be 6 digit\").max(6, \"*Pincode must be 6 digit\").required(\"*Zip Code  is required\").matches(pinCodeRegExp, \"*Must be Positive Number\"),\n  password: Yup.string().required(\"*Password  is required\").matches(passwordRegExp, \"*Password min be 8 Character,Password max be 20 Character,At least one uppercase character ,At least one lowercase character ,At least one digit ,At least one special character  \"),\n  confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"*Passwords must match\").required(\"*Confirm Password is required\"),\n  terms: Yup.bool().required().oneOf([true], \"*Terms must be accepted\"),\n  gender: Yup.string().required(\"*Select one Value\"),\n  project: Yup.string().required(\"*Please Select a Project!\"),\n  skills: Yup.array().min(1, \"*Please Select at least One Skill\").required(),\n  details: Yup.string().min(6, \"*Enter Atleast 6 Characters\").max(100, \"*Enter Maximum 100 Characters\").required(\"*Employee details  is required\"),\n  dateOfJoining: Yup.date().min(new Date(\"01/01/2019\"), \" *Must grater than '01/01/2019'\").max(new Date(), \"*Please check the Date of Joining\").required(\"* Date of joining is required\")\n});\n\nconst FormValidation = () => {\n  _s();\n\n  const [details, setDetails] = useState({});\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        padding: \"30px\",\n        paddingTop: \"0px\",\n        paddingBottom: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-3\",\n          children: \"Employee Registration Form \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* Marked fields are manadatory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          city: \"\",\n          state: \"\",\n          zip: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          terms: false,\n          gender: \"\",\n          project: \"\",\n          skills: [],\n          details: \"\",\n          dateOfJoining: \"\"\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          // When button submits form and form is in the process of submitting, submit button is disabled\n          setSubmitting(true); // Simulate submitting to database, shows us values submitted, resets form\n\n          setTimeout(() => {\n            alert(\" Data is submitted successfully\");\n            console.log(values);\n            setDetails(values);\n            resetForm();\n            setSubmitting(false);\n          }, 1000);\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          resetForm\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          className: \"mt-3\",\n          children: [console.log(errors), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"First name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 30\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              placeholder: \"First Name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.firstName,\n              isInvalid: touched.firstName && errors.firstName,\n              isValid: touched.firstName && !errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"lastName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Last name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 29\n              }, this), \" :\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              placeholder: \"Last Name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.lastName,\n              isInvalid: touched.lastName && errors.lastName,\n              isValid: touched.lastName && !errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\" \", \"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 28\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"password\",\n              placeholder: \"Password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password,\n              isInvalid: touched.password && errors.password,\n              isValid: touched.password && !errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Confirm password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 36\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"confirmPassword\",\n              placeholder: \"Confirm password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.confirmPassword,\n              isInvalid: touched.confirmPassword && errors.confirmPassword,\n              isValid: touched.confirmPassword && !errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\" \", \"Email\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 24\n              }, this), \" :\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email,\n              isInvalid: touched.email && errors.email,\n              isValid: touched.email && !errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Date of Joining: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 36\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"dateOfJoining\",\n              placeholder: \"dateOfJoining\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.dateOfJoining,\n              isInvalid: touched.dateOfJoining && errors.dateOfJoining,\n              isValid: touched.dateOfJoining && !errors.dateOfJoining\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.dateOfJoining\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"city\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\" \", \"City \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 24\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"city\",\n              placeholder: \"City\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.city,\n              isInvalid: touched.city && errors.city,\n              isValid: touched.city && !errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"state\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\" \", \"State \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 25\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"state\",\n              placeholder: \"State\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.state,\n              isInvalid: touched.state && errors.state,\n              isValid: touched.state && !errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"zip\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\" \", \"Zip \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"zip\",\n              placeholder: \"Zip Code\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.zip,\n              isInvalid: touched.zip && errors.zip,\n              isValid: touched.zip && !errors.zip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.zip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 2,\n              children: [\"Gender\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 25\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Male\",\n              name: \"gender\",\n              id: \"male\",\n              value: \"male\",\n              onChange: handleChange,\n              checked: values.gender === \"male\",\n              isInvalid: touched.gender && !!errors.gender,\n              feedbackType: \"invalid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Female\",\n              name: \"gender\",\n              id: \"Female\",\n              value: \"Female\",\n              onChange: handleChange,\n              checked: values.gender === \"Female\",\n              isInvalid: touched.gender && !!errors.gender,\n              feedback: errors.gender,\n              feedbackType: \"invalid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 2,\n              children: [\"Please Select Project \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 41\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Floating label select example\",\n              name: \"project\",\n              value: values.project,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              isInvalid: touched.project && errors.project,\n              isValid: touched.project && !errors.project,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select project-----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Education Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Finacial Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Health Care Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 2,\n              children: [\"Please Select Skills \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 40\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Floating label select example\",\n              name: \"skills\",\n              value: values.skills,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              isInvalid: touched.skills && errors.skills,\n              isValid: touched.skills && !errors.skills,\n              multiple: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Open this select menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Java\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Css\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"React\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"Mysql\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.skills\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Employee details :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"details\",\n              placeholder: \"Employee details\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.details,\n              isInvalid: touched.details && errors.details,\n              isValid: touched.details && !errors.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"terms\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                name: \"terms\",\n                label: \"Agree to terms and conditions :\",\n                onChange: handleChange,\n                isInvalid: touched.terms && !!errors.terms,\n                feedback: errors.terms,\n                feedbackType: \"invalid\",\n                checked: values.terms,\n                id: \"terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"m-5\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"reset\",\n              variant: \"danger\",\n              className: \"mr-3\",\n              onClick: e => resetForm(),\n              children: \"Cancle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(details).map(([key, value], i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", value]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidation, \"iRIEZ0IKTQQ6B6uf7snPKCVflsc=\");\n\n_c = FormValidation;\nexport default FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/FormValidation/FormValidation.js"],"names":["React","useState","Form","Button","Container","Formik","Yup","Fragment","pinCodeRegExp","passwordRegExp","validationSchema","object","shape","firstName","string","min","max","required","lastName","email","city","state","zip","matches","password","confirmPassword","oneOf","ref","terms","bool","gender","project","skills","array","details","dateOfJoining","date","Date","FormValidation","setDetails","padding","paddingTop","paddingBottom","values","setSubmitting","resetForm","setTimeout","alert","console","log","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","e","Object","entries","map","key","value","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Fragment } from \"react\";\n\nconst pinCodeRegExp = /^[1-9][0-9]*$/;\n\nconst passwordRegExp =\n  /^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[a-zA-Z!#$@^%&? \"])[a-zA-Z0-9!#$@^%&?]{8,20}$/;\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"*First Name must have at least 2 characters\")\n    .max(20, \"*First Name can't be longer than 20 characters\")\n    .required(\"*First Name is required\"),\n  lastName: Yup.string()\n    .min(2, \"*Last Name must have at least 2 characters\")\n    .max(20, \"*Last Name can't be longer than 20 characters\")\n    .required(\"*Last Name is required\"),\n  email: Yup.string()\n    .email(\"*Must be a valid email address\")\n    .max(20, \"*Email must be less than 20 characters\")\n    .required(\"*Email is required\"),\n  city: Yup.string()\n    .min(2, \"*City Name must have at least 2 characters\")\n    .max(20, \"*City Name can't be longer than 20 characters\")\n    .required(\"*City Name is required\"),\n  state: Yup.string()\n    .min(2, \"*State Name must have at least 2 characters\")\n    .max(20, \"*State Name can't be longer than 20 characters\")\n    .required(\"*State Name is required\"),\n  zip: Yup.string(\"Must be number\")\n    .min(6, \"*Pincode must be 6 digit\")\n    .max(6, \"*Pincode must be 6 digit\")\n    .required(\"*Zip Code  is required\")\n    .matches(pinCodeRegExp, \"*Must be Positive Number\"),\n  password: Yup.string()\n    .required(\"*Password  is required\")\n    .matches(\n      passwordRegExp,\n      \"*Password min be 8 Character,Password max be 20 Character,At least one uppercase character ,At least one lowercase character ,At least one digit ,At least one special character  \"\n    ),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"*Passwords must match\")\n    .required(\"*Confirm Password is required\"),\n  terms: Yup.bool().required().oneOf([true], \"*Terms must be accepted\"),\n  gender: Yup.string().required(\"*Select one Value\"),\n  project: Yup.string().required(\"*Please Select a Project!\"),\n  skills: Yup.array().min(1, \"*Please Select at least One Skill\").required(),\n\n  details: Yup.string()\n    .min(6, \"*Enter Atleast 6 Characters\")\n    .max(100, \"*Enter Maximum 100 Characters\")\n    .required(\"*Employee details  is required\"),\n\n  dateOfJoining: Yup.date()\n    .min(new Date(\"01/01/2019\"), \" *Must grater than '01/01/2019'\")\n    .max(new Date(), \"*Please check the Date of Joining\")\n    .required(\"* Date of joining is required\"),\n});\n\nconst FormValidation = () => {\n  const [details, setDetails] = useState({});\n  return (\n    <Fragment>\n      <Container\n        fluid\n        style={{\n          padding: \"30px\",\n          paddingTop: \"0px\",\n          paddingBottom: \"15px\",\n        }}\n      >\n        <div>\n          <h5 className=\"mb-3\">Employee Registration Form </h5>\n          <span className=\"required\">* Marked fields are manadatory</span>\n        </div>\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            city: \"\",\n            state: \"\",\n            zip: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            terms: false,\n            gender: \"\",\n            project: \"\",\n            skills: [],\n            details: \"\",\n            dateOfJoining: \"\",\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            // When button submits form and form is in the process of submitting, submit button is disabled\n            setSubmitting(true);\n            // Simulate submitting to database, shows us values submitted, resets form\n            setTimeout(() => {\n              alert(\" Data is submitted successfully\");\n              console.log(values);\n              setDetails(values);\n              resetForm();\n              setSubmitting(false);\n            }, 1000);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            resetForm,\n          }) => (\n            <Form onSubmit={handleSubmit} className=\"mt-3\">\n              {/*First Name input Field*/}\n              {console.log(errors)}\n              <Form.Group controlId=\"firstName\" className=\"mb-3\">\n                <Form.Label>\n                  First name <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder=\"First Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.firstName}\n                  isInvalid={touched.firstName && errors.firstName}\n                  isValid={touched.firstName && !errors.firstName}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.firstName}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Last Name input Field*/}\n              <Form.Group controlId=\"lastName\" className=\"mb-3\">\n                <Form.Label>\n                  Last name <span className=\"required\">*</span> :\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"Last Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.lastName}\n                  isInvalid={touched.lastName && errors.lastName}\n                  isValid={touched.lastName && !errors.lastName}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.lastName}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Password input Field*/}\n              <Form.Group controlId=\"password\" className=\"mb-3\">\n                <Form.Label>\n                  {\" \"}\n                  Password <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  isInvalid={touched.password && errors.password}\n                  isValid={touched.password && !errors.password}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/* Confirm Password input Field*/}\n              <Form.Group controlId=\"confirmPassword\" className=\"mb-3\">\n                <Form.Label>\n                  Confirm password <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.confirmPassword}\n                  isInvalid={touched.confirmPassword && errors.confirmPassword}\n                  isValid={touched.confirmPassword && !errors.confirmPassword}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.confirmPassword}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Email input Field*/}\n              <Form.Group controlId=\"email\" className=\"mb-3\">\n                <Form.Label>\n                  {\" \"}\n                  Email<span className=\"required\">*</span> :\n                </Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  isInvalid={touched.email && errors.email}\n                  isValid={touched.email && !errors.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/*Date input Field*/}\n              <Form.Group controlId=\"firstName\" className=\"mb-3\">\n                <Form.Label>\n                  Date of Joining: <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"dateOfJoining\"\n                  placeholder=\"dateOfJoining\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.dateOfJoining}\n                  isInvalid={touched.dateOfJoining && errors.dateOfJoining}\n                  isValid={touched.dateOfJoining && !errors.dateOfJoining}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.dateOfJoining}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*City input Field*/}\n              <Form.Group controlId=\"city\" className=\"mb-3\">\n                <Form.Label>\n                  {\" \"}\n                  City <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  placeholder=\"City\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.city}\n                  isInvalid={touched.city && errors.city}\n                  isValid={touched.city && !errors.city}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.city}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*State input Field*/}\n              <Form.Group controlId=\"state\" className=\"mb-3\">\n                <Form.Label>\n                  {\" \"}\n                  State <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"state\"\n                  placeholder=\"State\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.state}\n                  isInvalid={touched.state && errors.state}\n                  isValid={touched.state && !errors.state}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.state}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Zip input Field*/}\n              <Form.Group controlId=\"zip\" className=\"mb-3\">\n                <Form.Label>\n                  {\" \"}\n                  Zip <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"zip\"\n                  placeholder=\"Zip Code\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.zip}\n                  isInvalid={touched.zip && errors.zip}\n                  isValid={touched.zip && !errors.zip}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.zip}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/* Radio Button Field*/}\n              <Form.Group className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Gender<span className=\"required\">*</span>:\n                </Form.Label>\n\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Male\"\n                  name=\"gender\"\n                  id=\"male\"\n                  value=\"male\"\n                  onChange={handleChange}\n                  checked={values.gender === \"male\"}\n                  isInvalid={touched.gender && !!errors.gender}\n                  feedbackType=\"invalid\"\n                />\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Female\"\n                  name=\"gender\"\n                  id=\"Female\"\n                  value=\"Female\"\n                  onChange={handleChange}\n                  checked={values.gender === \"Female\"}\n                  isInvalid={touched.gender && !!errors.gender}\n                  feedback={errors.gender}\n                  feedbackType=\"invalid\"\n                />\n              </Form.Group>\n\n              {/* Drop Down listField for */}\n              <Form.Group className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Please Select Project <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Select\n                  aria-label=\"Floating label select example\"\n                  name=\"project\"\n                  value={values.project}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={touched.project && errors.project}\n                  isValid={touched.project && !errors.project}\n                >\n                  <option>Select project-----</option>\n                  <option value=\"1\">Education Project</option>\n                  <option value=\"2\">Finacial Project</option>\n                  <option value=\"3\">Health Care Project</option>\n                </Form.Select>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.project}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/* Drop Down listField for  MultiSelct*/}\n              <Form.Group className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Please Select Skills <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Select\n                  aria-label=\"Floating label select example\"\n                  name=\"skills\"\n                  value={values.skills}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={touched.skills && errors.skills}\n                  isValid={touched.skills && !errors.skills}\n                  multiple={true}\n                >\n                  <option>Open this select menu</option>\n                  <option value=\"1\">Java</option>\n                  <option value=\"2\">Html</option>\n                  <option value=\"3\">Css</option>\n                  <option value=\"4\">React</option>\n                  <option value=\"5\">Mysql</option>\n                </Form.Select>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.skills}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/* TeaxtArea Field*/}\n              <Form.Group\n                className=\"mb-3\"\n                controlId=\"exampleForm.ControlTextarea1\"\n              >\n                <Form.Label>\n                  Employee details :<span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  name=\"details\"\n                  placeholder=\"Employee details\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.details}\n                  isInvalid={touched.details && errors.details}\n                  isValid={touched.details && !errors.details}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.details}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/* Checkbox Field for terms*/}\n              <Form.Group className=\"mb-3\" controlId=\"terms\">\n                <div className=\"d-flex\">\n                  <Form.Check\n                    name=\"terms\"\n                    label=\"Agree to terms and conditions :\"\n                    onChange={handleChange}\n                    isInvalid={touched.terms && !!errors.terms}\n                    feedback={errors.terms}\n                    feedbackType=\"invalid\"\n                    checked={values.terms}\n                    id=\"terms\"\n                  />\n                  <span className=\"required\">*</span>\n                </div>\n              </Form.Group>\n              <div className=\"d-flex align-items-center justify-content-center\">\n                {/*Submit button that is disabled after button is clicked/form is in the process of submitting*/}\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  className=\"m-5\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n                <Button\n                  type=\"reset\"\n                  variant=\"danger\"\n                  className=\"mr-3\"\n                  onClick={(e) => resetForm()}\n                >\n                  Cancle\n                </Button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n\n        <div>\n          {Object.entries(details).map(([key, value], i) => {\n            return <div key={i}> {value}</div>;\n          })}\n        </div>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default FormValidation;\n"]},"metadata":{},"sourceType":"module"}