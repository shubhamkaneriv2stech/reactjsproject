{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/ReactJs/RouterAssignment/src/components/PostsManagement/Columns.js\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const COLUMNS = [{\n  id: \"expander\",\n  // Make sure it has an ID\n  width: 50,\n  Cell: ({\n    row,\n    rows,\n    toggleRowExpanded\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"span\", { ...row.getToggleRowExpandedProps({\n        onClick: () => {\n          //rows is find Which row is Expanded\n          const expandedRow = rows.find(row => row.isExpanded);\n\n          if (expandedRow) {\n            const isSubItemOfRow = Boolean(expandedRow && row.id === expandedRow.id);\n\n            if (isSubItemOfRow) {\n              const expandedSubItem = expandedRow.subRows.find(subRow => subRow.isExpanded);\n\n              if (expandedSubItem) {\n                const isClickedOnExpandedSubItem = expandedSubItem.id === row.id;\n                console.log(isClickedOnExpandedSubItem);\n\n                if (!isClickedOnExpandedSubItem) {\n                  toggleRowExpanded(expandedSubItem.id, false);\n                }\n              }\n            } else {\n              toggleRowExpanded(expandedRow.id, false);\n            }\n          }\n\n          row.toggleRowExpanded();\n        }\n      }),\n      children: row.isExpanded ? /*#__PURE__*/_jsxDEV(IndeterminateCheckBoxIcon, {\n        style: {\n          color: blue[500]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n        style: {\n          color: blue[500]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  Header: \"Id\",\n  accessor: \"id\",\n  width: 100,\n  defaultCanSort: false,\n  disableSortBy: true\n}, {\n  Header: \"User Id\",\n  accessor: \"userId\",\n  width: 100,\n  defaultCanSort: true,\n  disableSortBy: true,\n  StyleClass: \"text-left\"\n}, {\n  Header: \"title\",\n  accessor: \"title\",\n  width: 400,\n  defaultCanSort: true,\n  StyleClass: \"text-left\",\n  Cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    placement: \"top\",\n    delay: {\n      show: 250,\n      hide: 400\n    },\n    overlay: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: \"button-tooltip\",\n      ...props,\n      children: row.original.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ellipsis_class\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: row.original.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this),\n  disableSortBy: true\n}, {\n  Header: \"body\",\n  accessor: \"body\",\n  width: 400,\n  defaultCanSort: true,\n  StyleClass: \"text-left\",\n  Cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    placement: \"top\",\n    delay: {\n      show: 250,\n      hide: 400\n    },\n    overlay: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: \"button-tooltip\",\n      ...props,\n      children: row.original.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ellipsis_class\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: row.original.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this),\n  disableSortBy: true\n}];","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/PostsManagement/Columns.js"],"names":["AddBoxIcon","IndeterminateCheckBoxIcon","blue","OverlayTrigger","Tooltip","COLUMNS","id","width","Cell","row","rows","toggleRowExpanded","getToggleRowExpandedProps","onClick","expandedRow","find","isExpanded","isSubItemOfRow","Boolean","expandedSubItem","subRows","subRow","isClickedOnExpandedSubItem","console","log","color","Header","accessor","defaultCanSort","disableSortBy","StyleClass","show","hide","props","original","title","body"],"mappings":"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","sourcesContent":["import AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nexport const COLUMNS = [\r\n  {\r\n    id: \"expander\", // Make sure it has an ID\r\n    width: 50,\r\n    Cell: ({ row, rows, toggleRowExpanded }) => {\r\n      return (\r\n        <span\r\n          {...row.getToggleRowExpandedProps({\r\n            onClick: () => {\r\n              //rows is find Which row is Expanded\r\n              const expandedRow = rows.find((row) => row.isExpanded);\r\n\r\n              if (expandedRow) {\r\n                const isSubItemOfRow = Boolean(\r\n                  expandedRow && row.id === expandedRow.id\r\n                );\r\n                if (isSubItemOfRow) {\r\n                  const expandedSubItem = expandedRow.subRows.find(\r\n                    (subRow) => subRow.isExpanded\r\n                  );\r\n                  if (expandedSubItem) {\r\n                    const isClickedOnExpandedSubItem =\r\n                      expandedSubItem.id === row.id;\r\n                    console.log(isClickedOnExpandedSubItem);\r\n                    if (!isClickedOnExpandedSubItem) {\r\n                      toggleRowExpanded(expandedSubItem.id, false);\r\n                    }\r\n                  }\r\n                } else {\r\n                  toggleRowExpanded(expandedRow.id, false);\r\n                }\r\n              }\r\n              row.toggleRowExpanded();\r\n            },\r\n          })}\r\n        >\r\n          {row.isExpanded ? (\r\n            <IndeterminateCheckBoxIcon style={{ color: blue[500] }} />\r\n          ) : (\r\n            <AddBoxIcon style={{ color: blue[500] }} />\r\n          )}\r\n        </span>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    Header: \"Id\",\r\n    accessor: \"id\",\r\n    width: 100,\r\n    defaultCanSort: false,\r\n    disableSortBy: true,\r\n  },\r\n  {\r\n    Header: \"User Id\",\r\n    accessor: \"userId\",\r\n    width: 100,\r\n    defaultCanSort: true,\r\n    disableSortBy: true,\r\n    StyleClass: \"text-left\",\r\n  },\r\n  {\r\n    Header: \"title\",\r\n    accessor: \"title\",\r\n    width: 400,\r\n    defaultCanSort: true,\r\n    StyleClass: \"text-left\",\r\n\r\n    Cell: ({ row }) => (\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        delay={{ show: 250, hide: 400 }}\r\n        overlay={(props) => (\r\n          <Tooltip id=\"button-tooltip\" {...props}>\r\n            {row.original.title}\r\n          </Tooltip>\r\n        )}\r\n      >\r\n        <div className=\"ellipsis_class\">\r\n          <p>{row.original.title}</p>\r\n        </div>\r\n      </OverlayTrigger>\r\n    ),\r\n    disableSortBy: true,\r\n  },\r\n  {\r\n    Header: \"body\",\r\n    accessor: \"body\",\r\n    width: 400,\r\n    defaultCanSort: true,\r\n    StyleClass: \"text-left\",\r\n\r\n    Cell: ({ row }) => (\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        delay={{ show: 250, hide: 400 }}\r\n        overlay={(props) => (\r\n          <Tooltip id=\"button-tooltip\" {...props}>\r\n            {row.original.body}\r\n          </Tooltip>\r\n        )}\r\n      >\r\n        <div className=\"ellipsis_class\">\r\n          <p>{row.original.body}</p>\r\n        </div>\r\n      </OverlayTrigger>\r\n    ),\r\n    disableSortBy: true,\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}