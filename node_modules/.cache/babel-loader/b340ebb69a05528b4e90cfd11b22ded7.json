{"ast":null,"code":"const initialState = {\n  time: {\n    h: +0,\n    m: +0,\n    s: +0\n  },\n  seconds: +0\n};\n\nconst reducer = (state = initialState, action) => {\n  // console.log(state, action);\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { ...state,\n        seconds: state.seconds + 60,\n        time: action.secToTime(state.seconds + 60)\n      };\n\n    case \"DECREMENT\":\n      return { ...state,\n        seconds: state.seconds - 60,\n        time: action.secToTime(state.seconds - 60)\n      };\n\n    case \"START\":\n      return { ...state,\n        seconds: state.seconds - 1,\n        time: action.secToTime(state.seconds - 1)\n      };\n\n    case \"STOP\":\n      return { ...state,\n        seconds: 0,\n        time: {\n          h: 0,\n          m: 0,\n          s: 0\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/countdown/Reducers/Reducers.js"],"names":["initialState","time","h","m","s","seconds","reducer","state","action","type","secToTime"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,CAAC,EAAE,CAAC,CAAN;AAASC,IAAAA,CAAC,EAAE,CAAC,CAAb;AAAgBC,IAAAA,CAAC,EAAE,CAAC;AAApB,GAAR;AAAiCC,EAAAA,OAAO,EAAE,CAAC;AAA3C,CAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB,EAFpB;AAGLJ,QAAAA,IAAI,EAAEO,MAAM,CAACE,SAAP,CAAiBH,KAAK,CAACF,OAAN,GAAgB,EAAjC;AAHD,OAAP;;AAKF,SAAK,WAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB,EAFpB;AAGLJ,QAAAA,IAAI,EAAEO,MAAM,CAACE,SAAP,CAAiBH,KAAK,CAACF,OAAN,GAAgB,EAAjC;AAHD,OAAP;;AAMF,SAAK,OAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB,CAFpB;AAGLJ,QAAAA,IAAI,EAAEO,MAAM,CAACE,SAAP,CAAiBH,KAAK,CAACF,OAAN,GAAgB,CAAjC;AAHD,OAAP;;AAKF,SAAK,MAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,OAAO,EAAE,CAFJ;AAGLJ,QAAAA,IAAI,EAAE;AAAEC,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE,CAAX;AAAcC,UAAAA,CAAC,EAAE;AAAjB;AAHD,OAAP;;AAMF;AACE,aAAOG,KAAP;AA5BJ;AA8BD,CAhCD;;AAkCA,eAAeD,OAAf","sourcesContent":["const initialState = { time: { h: +0, m: +0, s: +0 }, seconds: +0 };\n\nconst reducer = (state = initialState, action) => {\n  // console.log(state, action);\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        ...state,\n        seconds: state.seconds + 60,\n        time: action.secToTime(state.seconds + 60),\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        seconds: state.seconds - 60,\n        time: action.secToTime(state.seconds - 60),\n      };\n\n    case \"START\":\n      return {\n        ...state,\n        seconds: state.seconds - 1,\n        time: action.secToTime(state.seconds - 1),\n      };\n    case \"STOP\":\n      return {\n        ...state,\n        seconds: 0,\n        time: { h: 0, m: 0, s: 0 },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}