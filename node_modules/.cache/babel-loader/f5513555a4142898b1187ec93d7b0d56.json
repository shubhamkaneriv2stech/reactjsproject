{"ast":null,"code":"import { SET_PRODUCTS } from \"../types/Types\";\nexport const Increment = () => {\n  return {\n    type: \"INCREMENT\"\n  };\n};\n_c = Increment;\nexport const Decrement = () => {\n  return {\n    type: \"DECREMENT;\"\n  };\n};\n_c2 = Decrement;\nexport const Start = () => {\n  return {\n    type: \"START\"\n  };\n};\n_c3 = Start;\nexport const Stop = () => {\n  return {\n    type: \"STOP\"\n  };\n};\n_c4 = Stop;\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    const res = await fetch(\"https://asos2.p.rapidapi.com/products/v2/list?country=US&currency=USD&sort=freshness&lang=en-US&sizeSchema=US&offset=0&categoryId=4209&limit=48&store=US\", {\n      params: {\n        q: \"bikini top\",\n        store: \"US\",\n        country: \"US\",\n        currency: \"USD\",\n        sizeSchema: \"US\",\n        lang: \"en-US\"\n      },\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"asos2.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"43c82d288dmsh345a8467ecae14dp1cd9c2jsnef27a5ea830c\"\n      }\n    });\n    const data = await res.json();\n    dispatch(setProducts(data.products));\n  };\n};\nexport const setProducts = (products = null) => {\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: []\n  };\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Increment\");\n$RefreshReg$(_c2, \"Decrement\");\n$RefreshReg$(_c3, \"Start\");\n$RefreshReg$(_c4, \"Stop\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/countdown/Actions/index.js"],"names":["SET_PRODUCTS","Increment","type","Decrement","Start","Stop","fetchProducts","dispatch","res","fetch","params","q","store","country","currency","sizeSchema","lang","method","headers","data","json","setProducts","products","payload"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;KAAMD,S;AAMb,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAMC,S;AAMb,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAME,K;AAKb,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,SAAO;AACLH,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;MAAMG,I;AAMb,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,0JADqB,EAErB;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAE,YADG;AAENC,QAAAA,KAAK,EAAE,IAFD;AAGNC,QAAAA,OAAO,EAAE,IAHH;AAINC,QAAAA,QAAQ,EAAE,KAJJ;AAKNC,QAAAA,UAAU,EAAE,IALN;AAMNC,QAAAA,IAAI,EAAE;AANA,OADV;AASEC,MAAAA,MAAM,EAAE,KATV;AAUEC,MAAAA,OAAO,EAAE;AACP,2BAAmB,sBADZ;AAEP,0BACE;AAHK;AAVX,KAFqB,CAAvB;AAmBA,UAAMC,IAAI,GAAG,MAAMX,GAAG,CAACY,IAAJ,EAAnB;AAEAb,IAAAA,QAAQ,CAACc,WAAW,CAACF,IAAI,CAACG,QAAN,CAAZ,CAAR;AACD,GAvBD;AAwBD,CAzBM;AA2BP,OAAO,MAAMD,WAAW,GAAG,CAACC,QAAQ,GAAG,IAAZ,KAAqB;AAC9C,MAAIA,QAAJ,EAAc;AACZ,WAAO;AACLpB,MAAAA,IAAI,EAAEF,YADD;AAELuB,MAAAA,OAAO,EAAED;AAFJ,KAAP;AAID;;AAED,SAAO;AACLpB,IAAAA,IAAI,EAAEF,YADD;AAELuB,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CAZM","sourcesContent":["import { SET_PRODUCTS } from \"../types/Types\";\nexport const Increment = () => {\n  return {\n    type: \"INCREMENT\",\n  };\n};\n\nexport const Decrement = () => {\n  return {\n    type: \"DECREMENT;\",\n  };\n};\n\nexport const Start = () => {\n  return {\n    type: \"START\",\n  };\n};\nexport const Stop = () => {\n  return {\n    type: \"STOP\",\n  };\n};\n\nexport const fetchProducts = () => {\n  return async function (dispatch) {\n    const res = await fetch(\n      \"https://asos2.p.rapidapi.com/products/v2/list?country=US&currency=USD&sort=freshness&lang=en-US&sizeSchema=US&offset=0&categoryId=4209&limit=48&store=US\",\n      {\n        params: {\n          q: \"bikini top\",\n          store: \"US\",\n          country: \"US\",\n          currency: \"USD\",\n          sizeSchema: \"US\",\n          lang: \"en-US\",\n        },\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"asos2.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"43c82d288dmsh345a8467ecae14dp1cd9c2jsnef27a5ea830c\",\n        },\n      }\n    );\n    const data = await res.json();\n\n    dispatch(setProducts(data.products));\n  };\n};\n\nexport const setProducts = (products = null) => {\n  if (products) {\n    return {\n      type: SET_PRODUCTS,\n      payload: products,\n    };\n  }\n\n  return {\n    type: SET_PRODUCTS,\n    payload: [],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}