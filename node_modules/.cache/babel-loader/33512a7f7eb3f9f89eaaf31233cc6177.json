{"ast":null,"code":"import _slicedToArray from\"/home/v2stech/ReactJs/RouterAssignment (copy)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useMemo}from\"react\";import{Form,Row,Col,Button}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UseMemoEXample=function UseMemoEXample(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),number=_useState2[0],setNumber=_useState2[1];// function to square the value\nvar squareNum=function squareNum(inputNumber){console.log(\"Squaring will be done!\",Math.pow(inputNumber,2));return Math.pow(inputNumber,2);};// Using useMemo Hook\nvar squaredNum=useMemo(function(){return squareNum(number);},[number]);var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),counter=_useState4[0],setCounter=_useState4[1];// Change the state to the input\nvar onChangeHandler=function onChangeHandler(e){setNumber(e.target.value);};// Increases the counter by 1\nvar counterHander=function counterHander(){setCounter(counter+1);};return/*#__PURE__*/_jsxs(\"div\",{className:\" justify-content-center align-items-center\",children:[/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{sm:{span:4,offset:4},children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Enter Number\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",placeholder:\"Enter a number\",value:number,onChange:onChangeHandler})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-3\",children:[\"OUTPUT: \",squaredNum]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-3\",children:[\"Counter : \",counter]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-3\",children:/*#__PURE__*/_jsx(Button,{type:\"button\",className:\"btn btn-primary\",onClick:counterHander,children:\"Counter ++\"})})]});};export default UseMemoEXample;","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/UseMemoAndUseCallBack/UseMemoEXample.js"],"names":["React","useState","useMemo","Form","Row","Col","Button","UseMemoEXample","number","setNumber","squareNum","inputNumber","console","log","Math","pow","squaredNum","counter","setCounter","onChangeHandler","e","target","value","counterHander","span","offset"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,OAA1B,KAAyC,OAAzC,CACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,GAApB,CAAyBC,MAAzB,KAAuC,iBAAvC,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,cAA4BN,QAAQ,CAAC,CAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eACA;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,WAAD,CAAiB,CACjCC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCC,IAAI,CAACC,GAAL,CAASJ,WAAT,CAAsB,CAAtB,CAAtC,EACA,MAAOG,CAAAA,IAAI,CAACC,GAAL,CAASJ,WAAT,CAAsB,CAAtB,CAAP,CACD,CAHD,CAIA;AACA,GAAMK,CAAAA,UAAU,CAAGd,OAAO,CAAC,UAAM,CAC/B,MAAOQ,CAAAA,SAAS,CAACF,MAAD,CAAhB,CACD,CAFyB,CAEvB,CAACA,MAAD,CAFuB,CAA1B,CAGA,eAA8BP,QAAQ,CAAC,CAAD,CAAtC,yCAAOgB,OAAP,eAAgBC,UAAhB,eAEA;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAO,CAC7BX,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CACD,CAFD,CAIA;AACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BL,UAAU,CAACD,OAAO,CAAG,CAAX,CAAV,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,4CAAf,wBACE,KAAC,IAAD,wBACE,KAAC,GAAD,wBACE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAEO,IAAI,CAAE,CAAR,CAAWC,MAAM,CAAE,CAAnB,CAAT,wBACE,KAAC,IAAD,CAAM,KAAN,2BADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,WAAW,CAAC,gBAFd,CAGE,KAAK,CAAEjB,MAHT,CAIE,QAAQ,CAAEW,eAJZ,EAFF,GADF,EADF,EADF,cAeE,aAAK,SAAS,CAAC,kBAAf,sBAA2CH,UAA3C,GAfF,cAgBE,aAAK,SAAS,CAAC,kBAAf,wBAA6CC,OAA7C,GAhBF,cAiBE,YAAK,SAAS,CAAC,kBAAf,uBACE,KAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,iBAFZ,CAGE,OAAO,CAAEM,aAHX,wBADF,EAjBF,GADF,CA6BD,CApDD,CAsDA,cAAehB,CAAAA,cAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\n\nconst UseMemoEXample = () => {\n  const [number, setNumber] = useState(0);\n  // function to square the value\n  const squareNum = (inputNumber) => {\n    console.log(\"Squaring will be done!\", Math.pow(inputNumber, 2));\n    return Math.pow(inputNumber, 2);\n  };\n  // Using useMemo Hook\n  const squaredNum = useMemo(() => {\n    return squareNum(number);\n  }, [number]);\n  const [counter, setCounter] = useState(0);\n\n  // Change the state to the input\n  const onChangeHandler = (e) => {\n    setNumber(e.target.value);\n  };\n\n  // Increases the counter by 1\n  const counterHander = () => {\n    setCounter(counter + 1);\n  };\n\n  return (\n    <div className=\" justify-content-center align-items-center\">\n      <Form>\n        <Row>\n          <Col sm={{ span: 4, offset: 4 }}>\n            <Form.Label>Enter Number</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Enter a number\"\n              value={number}\n              onChange={onChangeHandler}\n            />\n          </Col>\n        </Row>\n      </Form>\n\n      <div className=\"text-center mt-3\">OUTPUT: {squaredNum}</div>\n      <div className=\"text-center mt-3\">Counter : {counter}</div>\n      <div className=\"text-center mt-3\">\n        <Button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={counterHander}\n        >\n          Counter ++\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default UseMemoEXample;\n"]},"metadata":{},"sourceType":"module"}