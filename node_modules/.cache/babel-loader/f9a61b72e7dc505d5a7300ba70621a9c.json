{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/RouterAssignment/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport applicationLogo from \"../img/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n\n  //used HisTory hook for the getting route data\n  let history = useHistory(); //UserList With login And Password\n\n  let usersList = [{\n    username: \"user1\",\n    password: \"abc123\",\n    uId: \"1\"\n  }, {\n    username: \"user2\",\n    password: \"pass123\",\n    uId: \"2\"\n  }, {\n    username: \"user3\",\n    password: \"pass123\",\n    uId: \"3\"\n  }]; //Show Error Messages While Login\n\n  const [errMsg, seterrMsg] = useState({\n    msg: \"\",\n    color: \"\"\n  }); //Intial State of the UserDetails\n\n  const [userDetails, setUserDetails] = useState({\n    username: \"\",\n    password: \"\"\n  }); //handling function for the input field and their values\n\n  const handler = e => {\n    setUserDetails({ ...userDetails,\n      [e.target.name]: e.target.value\n    });\n  }; //States used validation login Credentials\n\n\n  const [validated, setValidated] = useState(false); //Login Submit Handler Function\n\n  const submitHandler = event => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    const users = usersList.find(items => items.username === userDetails.username && items.password === userDetails.password);\n    console.log(\"user\", users);\n\n    if (form.checkValidity() === false) {\n      setValidated(true);\n    } else if (users) {\n      onLoginSuccess();\n      history.push(\"/\");\n      setValidated(false);\n    } else {\n      setValidated(false);\n      seterrMsg({\n        msg: \" Invalid login Credentials\",\n        color: \"text-danger\"\n      });\n    }\n  }; //Returning  When Login Component Called\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginLeft: \"150px\",\n      marginTop: \"30px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        paddingRight: \"208px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        sm: 12,\n        lg: 7,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            borderRadius: \"0.25rem\",\n            border: \"1px solid #007bff\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              backgroundColor: \"#007bff\",\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: applicationLogo,\n                style: {\n                  width: \"140px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              validated: validated,\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"userName\",\n                  type: \"text\",\n                  name: \"username\",\n                  value: userDetails.username,\n                  onChange: handler,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  style: {\n                    textAlign: \"left\",\n                    marginBottom: 8\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \" Username is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  id: \"password\",\n                  name: \"password\",\n                  value: userDetails.password,\n                  onChange: handler,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  style: {\n                    textAlign: \"left\",\n                    marginBottom: 8\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \" Password is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginLeft: \"40%\"\n                },\n                className: \"btn btn-sm btn-success text-uppercase\",\n                type: \"submit\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: `d-flex justify-content-center ${errMsg.color} `,\n                children: errMsg.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}; //Checking PropTypes In Login Component\n\n\n_s(Login, \"ic+fBgLLZhhKr1GgTy2BCVrzTS8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nLogin.propTypes = {\n  onLoginSuccess: PropTypes.func\n};\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/v2stech/RouterAssignment/src/components/Login/Login.js"],"names":["React","useState","Container","Row","Col","Card","Form","Button","PropTypes","useHistory","applicationLogo","Login","onLoginSuccess","history","usersList","username","password","uId","errMsg","seterrMsg","msg","color","userDetails","setUserDetails","handler","e","target","name","value","validated","setValidated","submitHandler","event","form","currentTarget","preventDefault","stopPropagation","users","find","items","console","log","checkValidity","push","marginLeft","marginTop","paddingRight","borderRadius","border","backgroundColor","width","textAlign","marginBottom","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport applicationLogo from \"../img/logo.png\";\nconst Login = ({ onLoginSuccess }) => {\n    //used HisTory hook for the getting route data\n    let history = useHistory();\n\n    //UserList With login And Password\n    let usersList = [\n        {\n            username: \"user1\",\n            password: \"abc123\",\n            uId: \"1\",\n        },\n        {\n            username: \"user2\",\n            password: \"pass123\",\n            uId: \"2\",\n        },\n        {\n            username: \"user3\",\n            password: \"pass123\",\n            uId: \"3\",\n        },\n    ];\n    //Show Error Messages While Login\n    const [errMsg, seterrMsg] = useState({\n        msg: \"\",\n        color: \"\",\n    });\n\n    //Intial State of the UserDetails\n    const [userDetails, setUserDetails] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    //handling function for the input field and their values\n    const handler = (e) => {\n        setUserDetails({\n            ...userDetails,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    //States used validation login Credentials\n    const [validated, setValidated] = useState(false);\n\n    //Login Submit Handler Function\n    const submitHandler = (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        const users = usersList.find(\n            (items) =>\n                items.username === userDetails.username &&\n                items.password === userDetails.password\n        );\n        console.log(\"user\", users);\n        if (form.checkValidity() === false) {\n            setValidated(true);\n        } else if (users) {\n            onLoginSuccess();\n            history.push(\"/\");\n            setValidated(false);\n        } else {\n            setValidated(false);\n            seterrMsg({\n                msg: \" Invalid login Credentials\",\n                color: \"text-danger\",\n            });\n        }\n    };\n\n    //Returning  When Login Component Called\n    return (\n        <Container style={{ marginLeft: \"150px\", marginTop: \"30px\" }}>\n            <Row style={{ paddingRight: \"208px\" }}>\n                <Col md={8} sm={12} lg={7}>\n                    <Card\n                        style={{\n                            borderRadius: \"0.25rem\",\n                            border: \"1px solid #007bff\",\n                        }}\n                    >\n                        <Card.Body\n                            style={{\n                                backgroundColor: \"#007bff\",\n                                color: \"white\",\n                            }}\n                        >\n                            <div className=\"text-center\">\n                                <Card.Img\n                                    variant=\"top\"\n                                    src={applicationLogo}\n                                    style={{\n                                        width: \"140px\",\n                                    }}\n                                />\n                            </div>\n\n                            <Form\n                                noValidate\n                                validated={validated}\n                                onSubmit={submitHandler}\n                            >\n                                <Form.Group>\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control\n                                        id=\"userName\"\n                                        type=\"text\"\n                                        name=\"username\"\n                                        value={userDetails.username}\n                                        onChange={handler}\n                                        required\n                                    />\n                                    <Form.Control.Feedback\n                                        type=\"invalid\"\n                                        style={{\n                                            textAlign: \"left\",\n                                            marginBottom: 8,\n                                        }}\n                                    >\n                                        <strong> Username is required</strong>\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <br />\n                                <Form.Group>\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        value={userDetails.password}\n                                        onChange={handler}\n                                        required\n                                    />\n                                    <Form.Control.Feedback\n                                        type=\"invalid\"\n                                        style={{\n                                            textAlign: \"left\",\n                                            marginBottom: 8,\n                                        }}\n                                    >\n                                        <strong> Password is required</strong>\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <br />\n                                <Button\n                                    style={{ marginLeft: \"40%\" }}\n                                    className=\"btn btn-sm btn-success text-uppercase\"\n                                    type=\"submit\"\n                                >\n                                    Sign in\n                                </Button>\n                                <strong\n                                    className={`d-flex justify-content-center ${errMsg.color} `}\n                                >\n                                    {errMsg.msg}\n                                </strong>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\n//Checking PropTypes In Login Component\nLogin.propTypes = {\n    onLoginSuccess: PropTypes.func,\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}