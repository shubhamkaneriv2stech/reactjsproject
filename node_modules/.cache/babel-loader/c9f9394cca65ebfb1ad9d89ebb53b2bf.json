{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/FormValidation/FormValidation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pinCodeRegExp = /^[1-9][0-9]*$/;\nconst passwordRegExp = /^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[a-zA-Z!#$@^%&? \"])[a-zA-Z0-9!#$@^%&?]{8,20}$/;\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"*First Name must have at least 2 characters\").max(100, \"*First Name can't be longer than 100 characters\").required(\"*First Name is required\"),\n  lastName: Yup.string().min(2, \"*Last Name must have at least 2 characters\").max(100, \"*Last Name can't be longer than 100 characters\").required(\"*Last Name is required\"),\n  email: Yup.string().email(\"*Must be a valid email address\").max(100, \"*Email must be less than 100 characters\").required(\"*Email is required\"),\n  city: Yup.string().min(2, \"*City Name must have at least 2 characters\").max(100, \"*City Name can't be longer than 100 characters\").required(\"*City Name is required\"),\n  state: Yup.string().min(2, \"*State Name must have at least 2 characters\").max(100, \"*State Name can't be longer than 100 characters\").required(\"*State Name is required\"),\n  zip: Yup.string(\"Must be number\").min(6, \"*Pincode must be 6 digit\").max(6, \"*Pincode must be 6 digit\").required(\"*Zip Code  is required\").matches(pinCodeRegExp, \" Must be Positive Number\"),\n  password: Yup.string().required(\"*Password  is required\").matches(passwordRegExp, \"*Password min be 8 Character,Password max be 20 Character,At least one uppercase character ,At least one lowercase character ,At least one digit ,At least one special character  \"),\n  terms: Yup.bool().required().oneOf([true], \"*Terms must be accepted\"),\n  gender: Yup.string().required(\"Select one Value\"),\n  color: Yup.string().required(\"Color is required!\"),\n  checkedBox: Yup.array().min(1, \"Required\")\n});\n\nconst FormValidation = () => {\n  _s();\n\n  const [details, setDetails] = useState({});\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        padding: \"30px\",\n        paddingTop: \"0px\",\n        paddingBottom: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          city: \"\",\n          state: \"\",\n          zip: \"\",\n          password: \"\",\n          terms: false,\n          gender: \"\",\n          color: \"\",\n          checkedBox: []\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          // When button submits form and form is in the process of submitting, submit button is disabled\n          setSubmitting(true); // Simulate submitting to database, shows us values submitted, resets form\n\n          setTimeout(() => {\n            alert(\" Data is submitted successfully\");\n            console.log(values);\n            setDetails(values);\n            resetForm();\n            setSubmitting(false);\n          }, 1000);\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          className: \"mt-3\",\n          children: [console.log(errors), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" First name :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              placeholder: \"First Name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.firstName,\n              isInvalid: touched.firstName && errors.firstName,\n              isValid: touched.firstName && !errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"lastName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Last name :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              placeholder: \"Last Name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.lastName,\n              isInvalid: touched.lastName && errors.lastName,\n              isValid: touched.lastName && !errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Password :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"password\",\n              placeholder: \"Password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password,\n              isInvalid: touched.password && errors.password,\n              isValid: touched.password && !errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Email :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email,\n              isInvalid: touched.email && errors.email,\n              isValid: touched.email && !errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"city\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" City :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"city\",\n              placeholder: \"City\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.city,\n              isInvalid: touched.city && errors.city,\n              isValid: touched.city && !errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"state\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" State :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"state\",\n              placeholder: \"State\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.state,\n              isInvalid: touched.state && errors.state,\n              isValid: touched.state && !errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"zip\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Zip :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"zip\",\n              placeholder: \"Zip Code\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.zip,\n              isInvalid: touched.zip && errors.zip,\n              isValid: touched.zip && !errors.zip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.zip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 2,\n              children: \"Gender:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Male\",\n              name: \"gender\",\n              id: \"male\",\n              value: \"male\",\n              onChange: handleChange,\n              checked: values.gender === \"male\",\n              isInvalid: touched.gender && !!errors.gender,\n              feedbackType: \"invalid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Female\",\n              name: \"gender\",\n              id: \"Female\",\n              value: \"Female\",\n              onChange: handleChange,\n              checked: values.gender === \"Female\",\n              isInvalid: touched.gender && !!errors.gender,\n              feedback: errors.gender,\n              feedbackType: \"invalid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"terms\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              name: \"terms\",\n              label: \"Agree to terms and conditions\",\n              onChange: handleChange,\n              isInvalid: touched.terms && !!errors.terms,\n              feedback: errors.terms,\n              feedbackType: \"invalid\",\n              checked: values.terms,\n              id: \"terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"checkedBox\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 1,\n              children: \"CheckBoxes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"1\",\n              type: \"checkbox\",\n              name: \"checkedBox\" //value=\"One\"\n              ,\n              onChange: handleChange,\n              isInvalid: touched.checkedBox && !errors.checkedBox // checked={values.checkedBox === \"One\"}\n              ,\n              feedbackType: \"invalid\",\n              feedback: errors.checkedBox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              inline: true,\n              label: \"2\",\n              type: \"checkbox\",\n              name: \"checkedBox\" // value=\"Two\"\n              ,\n              onChange: handleChange,\n              isInvalid: touched.checkedBox && !errors.checkedBox,\n              feedbackType: \"invalid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 2,\n              children: \"Please Select:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Floating label select example\",\n              name: \"color\",\n              value: values.color,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              isInvalid: touched.color && errors.color,\n              isValid: touched.color && !errors.color,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Open this select menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"One\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Two\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Three\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"mt-5\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(details).map(([key, value], i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", value]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidation, \"iRIEZ0IKTQQ6B6uf7snPKCVflsc=\");\n\n_c = FormValidation;\nexport default FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/FormValidation/FormValidation.js"],"names":["React","useState","Form","Button","Container","Formik","Yup","Fragment","pinCodeRegExp","passwordRegExp","validationSchema","object","shape","firstName","string","min","max","required","lastName","email","city","state","zip","matches","password","terms","bool","oneOf","gender","color","checkedBox","array","FormValidation","details","setDetails","padding","paddingTop","paddingBottom","values","setSubmitting","resetForm","setTimeout","alert","console","log","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Object","entries","map","key","value","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Fragment } from \"react\";\n\nconst pinCodeRegExp = /^[1-9][0-9]*$/;\n\nconst passwordRegExp =\n  /^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[a-zA-Z!#$@^%&? \"])[a-zA-Z0-9!#$@^%&?]{8,20}$/;\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"*First Name must have at least 2 characters\")\n    .max(100, \"*First Name can't be longer than 100 characters\")\n    .required(\"*First Name is required\"),\n  lastName: Yup.string()\n    .min(2, \"*Last Name must have at least 2 characters\")\n    .max(100, \"*Last Name can't be longer than 100 characters\")\n    .required(\"*Last Name is required\"),\n  email: Yup.string()\n    .email(\"*Must be a valid email address\")\n    .max(100, \"*Email must be less than 100 characters\")\n    .required(\"*Email is required\"),\n  city: Yup.string()\n    .min(2, \"*City Name must have at least 2 characters\")\n    .max(100, \"*City Name can't be longer than 100 characters\")\n    .required(\"*City Name is required\"),\n  state: Yup.string()\n    .min(2, \"*State Name must have at least 2 characters\")\n    .max(100, \"*State Name can't be longer than 100 characters\")\n    .required(\"*State Name is required\"),\n  zip: Yup.string(\"Must be number\")\n    .min(6, \"*Pincode must be 6 digit\")\n    .max(6, \"*Pincode must be 6 digit\")\n    .required(\"*Zip Code  is required\")\n    .matches(pinCodeRegExp, \" Must be Positive Number\"),\n  password: Yup.string()\n    .required(\"*Password  is required\")\n    .matches(\n      passwordRegExp,\n      \"*Password min be 8 Character,Password max be 20 Character,At least one uppercase character ,At least one lowercase character ,At least one digit ,At least one special character  \"\n    ),\n  terms: Yup.bool().required().oneOf([true], \"*Terms must be accepted\"),\n  gender: Yup.string().required(\"Select one Value\"),\n  color: Yup.string().required(\"Color is required!\"),\n  checkedBox: Yup.array().min(1, \"Required\"),\n});\n\nconst FormValidation = () => {\n  const [details, setDetails] = useState({});\n  return (\n    <Fragment>\n      <Container\n        fluid\n        style={{\n          padding: \"30px\",\n          paddingTop: \"0px\",\n          paddingBottom: \"15px\",\n        }}\n      >\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            city: \"\",\n            state: \"\",\n            zip: \"\",\n            password: \"\",\n            terms: false,\n            gender: \"\",\n            color: \"\",\n            checkedBox: [],\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            // When button submits form and form is in the process of submitting, submit button is disabled\n            setSubmitting(true);\n            // Simulate submitting to database, shows us values submitted, resets form\n            setTimeout(() => {\n              alert(\" Data is submitted successfully\");\n              console.log(values);\n              setDetails(values);\n              resetForm();\n              setSubmitting(false);\n            }, 1000);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <Form onSubmit={handleSubmit} className=\"mt-3\">\n              {/*First Name input Field*/}\n              {console.log(errors)}\n              <Form.Group controlId=\"firstName\" className=\"mb-3\">\n                <Form.Label> First name :</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder=\"First Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.firstName}\n                  isInvalid={touched.firstName && errors.firstName}\n                  isValid={touched.firstName && !errors.firstName}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.firstName}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/*Last Name input Field*/}\n              <Form.Group controlId=\"lastName\" className=\"mb-3\">\n                <Form.Label> Last name :</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"Last Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.lastName}\n                  isInvalid={touched.lastName && errors.lastName}\n                  isValid={touched.lastName && !errors.lastName}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.lastName}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Password input Field*/}\n              <Form.Group controlId=\"password\" className=\"mb-3\">\n                <Form.Label> Password :</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  isInvalid={touched.password && errors.password}\n                  isValid={touched.password && !errors.password}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Email input Field*/}\n              <Form.Group controlId=\"email\" className=\"mb-3\">\n                <Form.Label> Email :</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  isInvalid={touched.email && errors.email}\n                  isValid={touched.email && !errors.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*City input Field*/}\n              <Form.Group controlId=\"city\" className=\"mb-3\">\n                <Form.Label> City :</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  placeholder=\"City\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.city}\n                  isInvalid={touched.city && errors.city}\n                  isValid={touched.city && !errors.city}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.city}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*State input Field*/}\n              <Form.Group controlId=\"state\" className=\"mb-3\">\n                <Form.Label> State :</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"state\"\n                  placeholder=\"State\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.state}\n                  isInvalid={touched.state && errors.state}\n                  isValid={touched.state && !errors.state}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.state}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Zip input Field*/}\n              <Form.Group controlId=\"zip\" className=\"mb-3\">\n                <Form.Label> Zip :</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"zip\"\n                  placeholder=\"Zip Code\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.zip}\n                  isInvalid={touched.zip && errors.zip}\n                  isValid={touched.zip && !errors.zip}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.zip}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/* Radio Button Field*/}\n              <Form.Group className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Gender:\n                </Form.Label>\n\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Male\"\n                  name=\"gender\"\n                  id=\"male\"\n                  value=\"male\"\n                  onChange={handleChange}\n                  checked={values.gender === \"male\"}\n                  isInvalid={touched.gender && !!errors.gender}\n                  feedbackType=\"invalid\"\n                />\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Female\"\n                  name=\"gender\"\n                  id=\"Female\"\n                  value=\"Female\"\n                  onChange={handleChange}\n                  checked={values.gender === \"Female\"}\n                  isInvalid={touched.gender && !!errors.gender}\n                  feedback={errors.gender}\n                  feedbackType=\"invalid\"\n                />\n              </Form.Group>\n              {/* Checkbox Field for terms*/}\n              <Form.Group className=\"mb-3\" controlId=\"terms\">\n                <Form.Check\n                  name=\"terms\"\n                  label=\"Agree to terms and conditions\"\n                  onChange={handleChange}\n                  isInvalid={touched.terms && !!errors.terms}\n                  feedback={errors.terms}\n                  feedbackType=\"invalid\"\n                  checked={values.terms}\n                  id=\"terms\"\n                />\n              </Form.Group>\n              {/* Multiple CheckBoxes Field for */}\n              <Form.Group className=\"mb-3\" controlId=\"checkedBox\">\n                <Form.Label as=\"legend\" column sm={1}>\n                  CheckBoxes:\n                </Form.Label>\n\n                <Form.Check\n                  inline\n                  label=\"1\"\n                  type=\"checkbox\"\n                  name=\"checkedBox\"\n                  //value=\"One\"\n                  onChange={handleChange}\n                  isInvalid={touched.checkedBox && !errors.checkedBox}\n                  // checked={values.checkedBox === \"One\"}\n                  feedbackType=\"invalid\"\n                  feedback={errors.checkedBox}\n                />\n                <Form.Check\n                  inline\n                  label=\"2\"\n                  type=\"checkbox\"\n                  name=\"checkedBox\"\n                  // value=\"Two\"\n                  onChange={handleChange}\n                  isInvalid={touched.checkedBox && !errors.checkedBox}\n                  feedbackType=\"invalid\"\n                />\n              </Form.Group>\n\n              {/* Drop Down listField for */}\n              <Form.Group className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Please Select:\n                </Form.Label>\n                <Form.Select\n                  aria-label=\"Floating label select example\"\n                  name=\"color\"\n                  value={values.color}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={touched.color && errors.color}\n                  isValid={touched.color && !errors.color}\n                >\n                  <option>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </Form.Select>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.color}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Submit button that is disabled after button is clicked/form is in the process of submitting*/}\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                className=\"mt-5\"\n                disabled={isSubmitting}\n              >\n                Submit\n              </Button>\n            </Form>\n          )}\n        </Formik>\n\n        <div>\n          {Object.entries(details).map(([key, value], i) => {\n            return <div key={i}> {value}</div>;\n          })}\n        </div>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default FormValidation;\n"]},"metadata":{},"sourceType":"module"}