{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/ReactJs/RouterAssignment/src/components/PostsManagement/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { COLUMNS } from \"./Columns\";\nimport { SubRowsColumns } from \"./SubRowsColumns\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CommonReactTable from \"../common/CommonReactTable\";\nimport { useSelector } from \"react-redux\";\nimport Subtable2 from \"./Subtable2\";\nimport SubTable from \"./SubTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const postsApiData = useSelector(state => state.postsApiReducer);\n  console.log(postsApiData, \" api calling\");\n  console.log(\" api calling\"); //Columns For Table\n\n  const columns = useMemo(() => COLUMNS, []);\n  const subRowsColumns = useMemo(() => SubRowsColumns, []); //State For Storing JsonPlaceholder Api  data\n\n  const [users, setUsers] = useState([]); // State For the Loader Part\n\n  const [loader, setLoader] = useState(true); //State for the ErrorMsg When Something Wrong In Fetching Api Data\n\n  const [errorMsg, setErrorMsg] = useState(null); //Declaration of APi URL\n\n  let apiUrl = `https://jsonplaceholder.typicode.com/posts`; //Function For Getting Api Data And Setting in users State\n  // Used for All Clean up When Component is Unmounted And mounted\n  // useEffect(() => {\n  //   let mounted = true;\n  //   const fetchUser = () => {\n  //     axios\n  //       .get(apiUrl)\n  //       .then(function (response) {\n  //         if (mounted) {\n  //           setUsers(response.data);\n  //           console.log(response.data);\n  //           setLoader(false);\n  //         }\n  //       })\n  //       .catch(function (error) {\n  //         // handle error\n  //         console.log(error);\n  //         setErrorMsg(\"Data Not Available\");\n  //         setLoader(false);\n  //       });\n  //   };\n  //   fetchUser();\n  //   return function cleanup() {\n  //     mounted = false;\n  //   };\n  // }, []);\n  //Passing Row And subRowsColumns to SubTable Component as Props\n\n  const renderRowSubComponent = row => {\n    return /*#__PURE__*/_jsxDEV(SubTable, {\n      subRowsColumns: subRowsColumns,\n      row: row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }; // //Passing Row And subRowsColumns to SubTable Component as Props\n  // const renderRowSubComponent = (row) => {\n  //   return <Subtable2 row={row} />;\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [\" \", errorMsg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loader ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"200px\",\n          color: \"red\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading Data Please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), setLoader(false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: postsApiData && /*#__PURE__*/_jsxDEV(CommonReactTable, {\n        data: postsApiData,\n        columns: columns,\n        tableTitle: \"Post Management Table\",\n        showPagination: false,\n        renderRowSubComponent: renderRowSubComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"LhHopSGKqkPX6DKeej3ftLjlHCU=\", false, function () {\n  return [useSelector];\n});\n\n_c = Posts;\nexport default Posts; // useEffect(() => {\n//     const source = axios.CancelToken.source();\n//     const fetchUsers = async () => {\n//         try {\n//             await axios.get(\"/users\", {\n//                 cancelToken: source.token,\n//             });\n//             // ...\n//         } catch (error) {\n//             if (Axios.isCancel(error)) {\n//             } else {\n//                 throw error;\n//             }\n//         }\n//     };\n//     fetchData();\n//     return () => {\n//         source.cancel();\n//     };\n// }, []);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment/src/components/PostsManagement/Posts.js"],"names":["useEffect","useState","useMemo","axios","COLUMNS","SubRowsColumns","CircularProgress","CommonReactTable","useSelector","Subtable2","SubTable","Posts","postsApiData","state","postsApiReducer","console","log","columns","subRowsColumns","users","setUsers","loader","setLoader","errorMsg","setErrorMsg","apiUrl","renderRowSubComponent","row","padding","color","textAlign"],"mappings":"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","sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { COLUMNS } from \"./Columns\";\r\nimport { SubRowsColumns } from \"./SubRowsColumns\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CommonReactTable from \"../common/CommonReactTable\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Subtable2 from \"./Subtable2\";\r\nimport SubTable from \"./SubTable\";\r\nconst Posts = () => {\r\n  const postsApiData = useSelector((state) => state.postsApiReducer);\r\n\r\n  console.log(postsApiData, \" api calling\");\r\n  console.log(\" api calling\");\r\n  //Columns For Table\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const subRowsColumns = useMemo(() => SubRowsColumns, []);\r\n  //State For Storing JsonPlaceholder Api  data\r\n  const [users, setUsers] = useState([]);\r\n  // State For the Loader Part\r\n  const [loader, setLoader] = useState(true);\r\n  //State for the ErrorMsg When Something Wrong In Fetching Api Data\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  //Declaration of APi URL\r\n  let apiUrl = `https://jsonplaceholder.typicode.com/posts`;\r\n  //Function For Getting Api Data And Setting in users State\r\n\r\n  // Used for All Clean up When Component is Unmounted And mounted\r\n  // useEffect(() => {\r\n  //   let mounted = true;\r\n  //   const fetchUser = () => {\r\n  //     axios\r\n  //       .get(apiUrl)\r\n  //       .then(function (response) {\r\n  //         if (mounted) {\r\n  //           setUsers(response.data);\r\n  //           console.log(response.data);\r\n  //           setLoader(false);\r\n  //         }\r\n  //       })\r\n  //       .catch(function (error) {\r\n  //         // handle error\r\n  //         console.log(error);\r\n  //         setErrorMsg(\"Data Not Available\");\r\n\r\n  //         setLoader(false);\r\n  //       });\r\n  //   };\r\n  //   fetchUser();\r\n  //   return function cleanup() {\r\n  //     mounted = false;\r\n  //   };\r\n  // }, []);\r\n\r\n  //Passing Row And subRowsColumns to SubTable Component as Props\r\n  const renderRowSubComponent = (row) => {\r\n    return <SubTable subRowsColumns={subRowsColumns} row={row} />;\r\n  };\r\n\r\n  // //Passing Row And subRowsColumns to SubTable Component as Props\r\n  // const renderRowSubComponent = (row) => {\r\n  //   return <Subtable2 row={row} />;\r\n  // };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"text-center\"> {errorMsg}</div>\r\n      {loader ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              padding: \"200px\",\r\n              color: \"red\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <CircularProgress color=\"secondary\" />\r\n            <h1>Loading Data Please wait...</h1>\r\n            {setLoader(false)}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {postsApiData && (\r\n            <CommonReactTable\r\n              data={postsApiData}\r\n              columns={columns}\r\n              tableTitle={\"Post Management Table\"}\r\n              showPagination={false}\r\n              renderRowSubComponent={renderRowSubComponent}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n// useEffect(() => {\r\n//     const source = axios.CancelToken.source();\r\n\r\n//     const fetchUsers = async () => {\r\n//         try {\r\n//             await axios.get(\"/users\", {\r\n//                 cancelToken: source.token,\r\n//             });\r\n//             // ...\r\n//         } catch (error) {\r\n//             if (Axios.isCancel(error)) {\r\n//             } else {\r\n//                 throw error;\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     fetchData();\r\n\r\n//     return () => {\r\n//         source.cancel();\r\n//     };\r\n// }, []);\r\n"]},"metadata":{},"sourceType":"module"}