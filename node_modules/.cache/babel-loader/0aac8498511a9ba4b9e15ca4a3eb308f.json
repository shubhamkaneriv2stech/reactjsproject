{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/FormValidation/FormValidation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { Form, Button, Container, InputGroup } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { validationRules } from \"./ValidationSchema\";\nimport Moment from \"moment\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormValidation = () => {\n  _s();\n\n  const [details, setDetails] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        padding: \"30px\",\n        paddingTop: \"0px\",\n        paddingBottom: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-3\",\n          children: \"Employee Registration Form \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"* Marked fields are manadatory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {},\n        validationSchema: validationRules,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          // When button submits form and form is in the process of submitting, submit button is disabled\n          setSubmitting(true); // Simulate submitting to database, shows us values submitted, resets form\n\n          setTimeout(() => {\n            alert(\" Data is submitted successfully\");\n            console.log(values);\n            setDetails(values);\n            resetForm();\n            setSubmitting(false);\n          }, 1000);\n        },\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          resetForm\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          className: \"mt-3\",\n          children: [console.log(errors), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"First name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 30\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"firstName\",\n              placeholder: \"First Name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.firstName,\n              isInvalid: touched.firstName && errors.firstName,\n              isValid: touched.firstName && !errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"lastName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Last name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this), \" :\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"lastName\",\n              placeholder: \"Last Name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.lastName,\n              isInvalid: touched.lastName && errors.lastName,\n              isValid: touched.lastName && !errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 28\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: showPassword ? \"text\" : \"password\",\n                name: \"password\",\n                placeholder: \"Password\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.password,\n                isInvalid: touched.password && errors.password,\n                isValid: touched.password && !errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                onClick: () => setShowPassword(!showPassword),\n                children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmPassword\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Confirm password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 36\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: showConfirmPassword ? \"text\" : \"password\",\n                name: \"confirmPassword\",\n                placeholder: \"Confirm password\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.confirmPassword,\n                isInvalid: touched.confirmPassword && errors.confirmPassword,\n                isValid: touched.confirmPassword && !errors.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                onClick: () => setConfirmShowPassword(!showConfirmPassword),\n                children: showConfirmPassword ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Email\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 24\n              }, this), \" :\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email,\n              isInvalid: touched.email && errors.email,\n              isValid: touched.email && !errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"firstName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Date of Joining: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 36\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"dateOfJoining\",\n              placeholder: \"dateOfJoining\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              max: Moment().format(\"YYYY-MM-DD\"),\n              value: values.dateOfJoining,\n              isInvalid: touched.dateOfJoining && errors.dateOfJoining,\n              isValid: touched.dateOfJoining && !errors.dateOfJoining\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.dateOfJoining\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"city\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"City \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 24\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"city\",\n              placeholder: \"City\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.city,\n              isInvalid: touched.city && errors.city,\n              isValid: touched.city && !errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"state\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"State \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 25\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"state\",\n              placeholder: \"State\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.state,\n              isInvalid: touched.state && errors.state,\n              isValid: touched.state && !errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"zip\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Zip \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"zip\",\n              placeholder: \"Zip Code\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.zip,\n              isInvalid: touched.zip && errors.zip,\n              isValid: touched.zip && !errors.zip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.zip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 2,\n              children: [\"Gender\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 25\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Male\",\n              name: \"gender\",\n              id: \"male\",\n              value: \"male\",\n              onChange: handleChange,\n              checked: values.gender === \"male\",\n              isInvalid: touched.gender && !!errors.gender,\n              feedbackType: \"invalid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Female\",\n              name: \"gender\",\n              id: \"Female\",\n              value: \"Female\",\n              onChange: handleChange,\n              checked: values.gender === \"Female\",\n              isInvalid: touched.gender && !!errors.gender,\n              feedback: errors.gender,\n              feedbackType: \"invalid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 2,\n              children: [\"Please Select Project \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 41\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Floating label select example\",\n              name: \"project\",\n              value: values.project,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              isInvalid: touched.project && errors.project,\n              isValid: touched.project && !errors.project,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select project-----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Education Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Finacial Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Health Care Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              as: \"legend\",\n              column: true,\n              sm: 2,\n              children: [\"Please Select Skills \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 40\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Floating label select example\",\n              name: \"skills\",\n              value: values.skills,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              isInvalid: touched.skills && errors.skills,\n              isValid: touched.skills && !errors.skills,\n              multiple: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Open this select menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Java\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Html\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Css\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"React\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"Mysql\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.skills\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Employee details :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"details\",\n              placeholder: \"Employee details\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.details,\n              isInvalid: touched.details && errors.details,\n              isValid: touched.details && !errors.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"terms\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                name: \"terms\",\n                label: \"Agree to terms and conditions :\",\n                onChange: handleChange,\n                isInvalid: touched.terms && !!errors.terms,\n                feedback: errors.terms,\n                feedbackType: \"invalid\",\n                checked: values.terms,\n                id: \"terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"m-2\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"reset\",\n              variant: \"danger\",\n              className: \"mr-3\",\n              onClick: e => resetForm(),\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(details).map(([key, value], i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", value]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidation, \"wXWim4Z1PHw0n3OlIVmE2ieDuWM=\");\n\n_c = FormValidation;\nexport default FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/FormValidation/FormValidation.js"],"names":["React","useState","Fragment","Form","Button","Container","InputGroup","Formik","validationRules","Moment","VisibilityIcon","VisibilityOffIcon","FormValidation","details","setDetails","showPassword","setShowPassword","showConfirmPassword","setConfirmShowPassword","padding","paddingTop","paddingBottom","values","setSubmitting","resetForm","setTimeout","alert","console","log","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","firstName","lastName","password","confirmPassword","email","format","dateOfJoining","city","state","zip","gender","project","skills","terms","e","Object","entries","map","key","value","i"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { Form, Button, Container, InputGroup } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport { validationRules } from \"./ValidationSchema\";\nimport Moment from \"moment\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\n\nconst FormValidation = () => {\n  const [details, setDetails] = useState({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setConfirmShowPassword] = useState(false);\n\n  return (\n    <Fragment>\n      <Container\n        fluid\n        style={{\n          padding: \"30px\",\n          paddingTop: \"0px\",\n          paddingBottom: \"15px\",\n        }}\n      >\n        <div>\n          <h5 className=\"mb-3\">Employee Registration Form </h5>\n          <span className=\"required\">* Marked fields are manadatory</span>\n        </div>\n        <Formik\n          initialValues={{}}\n          validationSchema={validationRules}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            // When button submits form and form is in the process of submitting, submit button is disabled\n            setSubmitting(true);\n            // Simulate submitting to database, shows us values submitted, resets form\n            setTimeout(() => {\n              alert(\" Data is submitted successfully\");\n              console.log(values);\n              setDetails(values);\n              resetForm();\n              setSubmitting(false);\n            }, 1000);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            resetForm,\n          }) => (\n            <Form onSubmit={handleSubmit} className=\"mt-3\">\n              {/*First Name input Field*/}\n              {console.log(errors)}\n              <Form.Group controlId=\"firstName\" className=\"mb-3\">\n                <Form.Label>\n                  First name <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder=\"First Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.firstName}\n                  isInvalid={touched.firstName && errors.firstName}\n                  isValid={touched.firstName && !errors.firstName}\n                />\n\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.firstName}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Last Name input Field*/}\n              <Form.Group controlId=\"lastName\" className=\"mb-3\">\n                <Form.Label>\n                  Last name <span className=\"required\">*</span> :\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"Last Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.lastName}\n                  isInvalid={touched.lastName && errors.lastName}\n                  isValid={touched.lastName && !errors.lastName}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.lastName}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Password input Field*/}\n              <Form.Group controlId=\"password\" className=\"mb-3\">\n                <Form.Label>\n                  Password <span className=\"required\">*</span>:\n                </Form.Label>\n                <InputGroup className=\"mb-2\">\n                  <Form.Control\n                    type={showPassword ? \"text\" : \"password\"}\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                    isInvalid={touched.password && errors.password}\n                    isValid={touched.password && !errors.password}\n                  />\n                  <Button\n                    variant=\"outline-secondary\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                  </Button>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.password}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n              {/* Confirm Password input Field*/}\n              <Form.Group controlId=\"confirmPassword\" className=\"mb-3\">\n                <Form.Label>\n                  Confirm password <span className=\"required\">*</span>:\n                </Form.Label>\n                <InputGroup className=\"mb-2\">\n                  <Form.Control\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm password\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.confirmPassword}\n                    isInvalid={\n                      touched.confirmPassword && errors.confirmPassword\n                    }\n                    isValid={touched.confirmPassword && !errors.confirmPassword}\n                  />\n                  <Button\n                    variant=\"outline-secondary\"\n                    onClick={() => setConfirmShowPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? (\n                      <VisibilityIcon />\n                    ) : (\n                      <VisibilityOffIcon />\n                    )}\n                  </Button>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.confirmPassword}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n\n              {/*Email input Field*/}\n              <Form.Group controlId=\"email\" className=\"mb-3\">\n                <Form.Label>\n                  Email<span className=\"required\">*</span> :\n                </Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  isInvalid={touched.email && errors.email}\n                  isValid={touched.email && !errors.email}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.email}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/*Date input Field*/}\n              <Form.Group controlId=\"firstName\" className=\"mb-3\">\n                <Form.Label>\n                  Date of Joining: <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"dateOfJoining\"\n                  placeholder=\"dateOfJoining\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  max={Moment().format(\"YYYY-MM-DD\")}\n                  value={values.dateOfJoining}\n                  isInvalid={touched.dateOfJoining && errors.dateOfJoining}\n                  isValid={touched.dateOfJoining && !errors.dateOfJoining}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.dateOfJoining}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*City input Field*/}\n              <Form.Group controlId=\"city\" className=\"mb-3\">\n                <Form.Label>\n                  City <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  placeholder=\"City\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.city}\n                  isInvalid={touched.city && errors.city}\n                  isValid={touched.city && !errors.city}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.city}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*State input Field*/}\n              <Form.Group controlId=\"state\" className=\"mb-3\">\n                <Form.Label>\n                  State <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"state\"\n                  placeholder=\"State\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.state}\n                  isInvalid={touched.state && errors.state}\n                  isValid={touched.state && !errors.state}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.state}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/*Zip input Field*/}\n              <Form.Group controlId=\"zip\" className=\"mb-3\">\n                <Form.Label>\n                  Zip <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"zip\"\n                  placeholder=\"Zip Code\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.zip}\n                  isInvalid={touched.zip && errors.zip}\n                  isValid={touched.zip && !errors.zip}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.zip}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/* Radio Button Field*/}\n              <Form.Group className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Gender<span className=\"required\">*</span>:\n                </Form.Label>\n\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Male\"\n                  name=\"gender\"\n                  id=\"male\"\n                  value=\"male\"\n                  onChange={handleChange}\n                  checked={values.gender === \"male\"}\n                  isInvalid={touched.gender && !!errors.gender}\n                  feedbackType=\"invalid\"\n                />\n                <Form.Check\n                  type=\"radio\"\n                  label=\"Female\"\n                  name=\"gender\"\n                  id=\"Female\"\n                  value=\"Female\"\n                  onChange={handleChange}\n                  checked={values.gender === \"Female\"}\n                  isInvalid={touched.gender && !!errors.gender}\n                  feedback={errors.gender}\n                  feedbackType=\"invalid\"\n                />\n              </Form.Group>\n\n              {/* Drop Down listField for */}\n              <Form.Group className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Please Select Project <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Select\n                  aria-label=\"Floating label select example\"\n                  name=\"project\"\n                  value={values.project}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={touched.project && errors.project}\n                  isValid={touched.project && !errors.project}\n                >\n                  <option>Select project-----</option>\n                  <option value=\"1\">Education Project</option>\n                  <option value=\"2\">Finacial Project</option>\n                  <option value=\"3\">Health Care Project</option>\n                </Form.Select>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.project}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              {/* Drop Down listField for  MultiSelct*/}\n              <Form.Group className=\"mb-3\">\n                <Form.Label as=\"legend\" column sm={2}>\n                  Please Select Skills <span className=\"required\">*</span>:\n                </Form.Label>\n                <Form.Select\n                  aria-label=\"Floating label select example\"\n                  name=\"skills\"\n                  value={values.skills}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={touched.skills && errors.skills}\n                  isValid={touched.skills && !errors.skills}\n                  multiple={true}\n                >\n                  <option>Open this select menu</option>\n                  <option value=\"1\">Java</option>\n                  <option value=\"2\">Html</option>\n                  <option value=\"3\">Css</option>\n                  <option value=\"4\">React</option>\n                  <option value=\"5\">Mysql</option>\n                </Form.Select>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.skills}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/* TeaxtArea Field*/}\n              <Form.Group\n                className=\"mb-3\"\n                controlId=\"exampleForm.ControlTextarea1\"\n              >\n                <Form.Label>\n                  Employee details :<span className=\"required\">*</span>\n                </Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  name=\"details\"\n                  placeholder=\"Employee details\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.details}\n                  isInvalid={touched.details && errors.details}\n                  isValid={touched.details && !errors.details}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.details}\n                </Form.Control.Feedback>\n              </Form.Group>\n              {/* Checkbox Field for terms*/}\n              <Form.Group className=\"mb-3\" controlId=\"terms\">\n                <div className=\"d-flex\">\n                  <Form.Check\n                    name=\"terms\"\n                    label=\"Agree to terms and conditions :\"\n                    onChange={handleChange}\n                    isInvalid={touched.terms && !!errors.terms}\n                    feedback={errors.terms}\n                    feedbackType=\"invalid\"\n                    checked={values.terms}\n                    id=\"terms\"\n                  />\n                  <span className=\"required\">*</span>\n                </div>\n              </Form.Group>\n              <div className=\"d-flex align-items-center justify-content-center\">\n                {/*Submit button that is disabled after button is clicked,form is in the process of submitting*/}\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  className=\"m-2\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n                <Button\n                  type=\"reset\"\n                  variant=\"danger\"\n                  className=\"mr-3\"\n                  onClick={(e) => resetForm()}\n                >\n                  Reset\n                </Button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n\n        <div>\n          {Object.entries(details).map(([key, value], i) => {\n            return <div key={i}> {value}</div>;\n          })}\n        </div>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default FormValidation;\n"]},"metadata":{},"sourceType":"module"}