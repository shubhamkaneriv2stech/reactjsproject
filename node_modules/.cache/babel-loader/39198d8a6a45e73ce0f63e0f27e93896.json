{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/RouterAssignment/src/components/Sidebar/SideBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../ContextReducer/GlobalState\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = ({\n  img\n}) => {\n  _s();\n\n  const {\n    todo\n  } = useContext(GlobalContext);\n  const [menu] = useState({\n    list: [{\n      id: \"profile\",\n      value: \"Profile\",\n      url: \"/\",\n      icon: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 23\n      }, this)\n    }, {\n      value: \"Restaurant grid view\",\n      id: \"list\",\n      url: \"/list\",\n      icon: /*#__PURE__*/_jsxDEV(ListIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 23\n      }, this)\n    }, {\n      value: \"To do app v1\",\n      id: \"todo\",\n      url: \"/todo\",\n      icon: /*#__PURE__*/_jsxDEV(AppsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }, this)\n    }, {\n      value: \"To do app v2\",\n      id: \"TodoAppContext\",\n      url: \"/TodoAppContext\",\n      icon: /*#__PURE__*/_jsxDEV(AppsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }, this)\n    }, {\n      value: \"User list v1\",\n      id: \"table\",\n      url: \"/table\",\n      icon: /*#__PURE__*/_jsxDEV(TableChartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }, this)\n    }, {\n      value: \"User list v2\",\n      id: \"reactTable\",\n      url: \"/reactTable\",\n      icon: /*#__PURE__*/_jsxDEV(TableChartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }, this)\n    }, {\n      value: \"Weather Api\",\n      id: \"api\",\n      url: \"/weatherapi\",\n      icon: /*#__PURE__*/_jsxDEV(WbSunnyIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this)\n    }, {\n      value: \"Common Table\",\n      id: \"ReTable\",\n      url: \"/commonTable\",\n      icon: /*#__PURE__*/_jsxDEV(TableChartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this)\n    }, {\n      value: \"Posts Management Table\",\n      id: \"Posts\",\n      url: \"/PostsTable\",\n      icon: /*#__PURE__*/_jsxDEV(TableChartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this)\n    }]\n  });\n  let [state, setState] = useState(\"\");\n\n  const list = e => {\n    setState(e);\n  };\n\n  useEffect(() => {\n    setState(\"profile\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    style: {\n      zIndex: 99\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"\",\n        className: \"rounded-circle\",\n        width: \"150\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listItem\",\n      style: {\n        height: \"400px\",\n        overflowX: \"scroll\"\n      },\n      children: menu.list.length > 0 && menu.list.map((items, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: items.url,\n            onClick: () => list(items.id),\n            className: state === items.id ? \"active  align-items-center\" : \"align-items-center\",\n            style: {\n              color: \"#403c3c\",\n              textDecoration: \"none\",\n              fontSize: \"14px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: \"6px\"\n              },\n              children: items.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this), items.value !== \"To do app v2\" ? items.value : `${items.value} (${todo.length})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}; //Checking PropTypes In Login Component\n\n\n_s(SideBar, \"S8BaiReSBSyqkSIxaLifASL1e2c=\");\n\n_c = SideBar;\nSideBar.propTypes = {\n  img: PropTypes.string\n};\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/home/v2stech/RouterAssignment/src/components/Sidebar/SideBar.js"],"names":["React","useState","useEffect","useContext","AccountCircleIcon","ListIcon","TableChartIcon","AppsIcon","Link","GlobalContext","WbSunnyIcon","PropTypes","SideBar","img","todo","menu","list","id","value","url","icon","state","setState","e","zIndex","height","overflowX","length","map","items","i","color","textDecoration","fontSize","marginRight","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../ContextReducer/GlobalState\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport PropTypes from \"prop-types\";\r\nconst SideBar = ({ img }) => {\r\n    const { todo } = useContext(GlobalContext);\r\n    const [menu] = useState({\r\n        list: [\r\n            {\r\n                id: \"profile\",\r\n                value: \"Profile\",\r\n                url: \"/\",\r\n                icon: <AccountCircleIcon />,\r\n            },\r\n            {\r\n                value: \"Restaurant grid view\",\r\n                id: \"list\",\r\n                url: \"/list\",\r\n                icon: <ListIcon />,\r\n            },\r\n            {\r\n                value: \"To do app v1\",\r\n                id: \"todo\",\r\n                url: \"/todo\",\r\n                icon: <AppsIcon />,\r\n            },\r\n            {\r\n                value: \"To do app v2\",\r\n                id: \"TodoAppContext\",\r\n                url: \"/TodoAppContext\",\r\n                icon: <AppsIcon />,\r\n            },\r\n            {\r\n                value: \"User list v1\",\r\n                id: \"table\",\r\n                url: \"/table\",\r\n                icon: <TableChartIcon />,\r\n            },\r\n\r\n            {\r\n                value: \"User list v2\",\r\n                id: \"reactTable\",\r\n                url: \"/reactTable\",\r\n                icon: <TableChartIcon />,\r\n            },\r\n\r\n            {\r\n                value: \"Weather Api\",\r\n                id: \"api\",\r\n                url: \"/weatherapi\",\r\n                icon: <WbSunnyIcon />,\r\n            },\r\n            {\r\n                value: \"Common Table\",\r\n                id: \"ReTable\",\r\n                url: \"/commonTable\",\r\n                icon: <TableChartIcon />,\r\n            },\r\n            {\r\n                value: \"Posts Management Table\",\r\n                id: \"Posts\",\r\n                url: \"/PostsTable\",\r\n                icon: <TableChartIcon />,\r\n            },\r\n        ],\r\n    });\r\n\r\n    let [state, setState] = useState(\"\");\r\n\r\n    const list = (e) => {\r\n        setState(e);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setState(\"profile\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\" style={{ zIndex: 99 }}>\r\n            <div className=\"img\">\r\n                <img src={img} alt=\"\" className=\"rounded-circle\" width=\"150\" />\r\n            </div>\r\n            <hr />\r\n            <ul\r\n                className=\"listItem\"\r\n                style={{ height: \"400px\", overflowX: \"scroll\" }}\r\n            >\r\n                {menu.list.length > 0 &&\r\n                    menu.list.map((items, i) => {\r\n                        return (\r\n                            <li key={i}>\r\n                                <Link\r\n                                    to={items.url}\r\n                                    onClick={() => list(items.id)}\r\n                                    className={\r\n                                        state === items.id\r\n                                            ? \"active  align-items-center\"\r\n                                            : \"align-items-center\"\r\n                                    }\r\n                                    style={{\r\n                                        color: \"#403c3c\",\r\n                                        textDecoration: \"none\",\r\n                                        fontSize: \"14px\",\r\n                                    }}\r\n                                >\r\n                                    <span\r\n                                        style={{\r\n                                            marginRight: \"6px\",\r\n                                        }}\r\n                                    >\r\n                                        {items.icon}\r\n                                    </span>\r\n                                    {items.value !== \"To do app v2\"\r\n                                        ? items.value\r\n                                        : `${items.value} (${todo.length})`}\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n//Checking PropTypes In Login Component\r\nSideBar.propTypes = {\r\n    img: PropTypes.string,\r\n};\r\n\r\nexport default SideBar;\r\n"]},"metadata":{},"sourceType":"module"}