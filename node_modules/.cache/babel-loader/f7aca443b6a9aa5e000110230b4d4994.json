{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/RouterAssignment/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport applicationLogo from \"../img/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n\n  //used HisTory hook for the getting route data\n  let history = useHistory(); //UserList With login And Password\n\n  let usersList = [{\n    username: \"user1\",\n    password: \"abc123\",\n    uId: \"1\"\n  }, {\n    username: \"user2\",\n    password: \"pass123\",\n    uId: \"2\"\n  }, {\n    username: \"user3\",\n    password: \"pass123\",\n    uId: \"3\"\n  }]; //Show Error Messages While Login\n\n  const [errMsg, seterrMsg] = useState({\n    msg: \"\",\n    color: \"\"\n  }); //Intial State of the UserDetails\n\n  const [userDetails, setUserDetails] = useState({\n    username: \"\",\n    password: \"\"\n  }); //handling function for the input field and their values\n\n  const handler = e => {\n    setUserDetails({ ...userDetails,\n      [e.target.name]: e.target.value\n    });\n  }; //States used validation login Credentials\n\n\n  const [validated, setValidated] = useState(false); //Login Submit Handler Function\n\n  const submitHandler = event => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    const users = usersList.find(items => items.username === userDetails.username && items.password === userDetails.password);\n    console.log(\"user\", users);\n\n    if (form.checkValidity() === false) {\n      setValidated(true);\n    } else if (users) {\n      onLoginSuccess();\n      history.push(\"/\");\n      setValidated(false);\n    } else {\n      setValidated(false);\n      seterrMsg({\n        msg: \" Invalid login Credentials\",\n        color: \"text-danger\"\n      });\n    }\n  }; //Returning  When Login Component Called\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginLeft: \"300px\",\n      marginTop: \"120px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        paddingRight: \"208px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        sm: 12,\n        lg: 7,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            borderRadius: \"0.25rem\",\n            border: \"1px solid #007bff\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              backgroundColor: \"#007bff\",\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: applicationLogo,\n                style: {\n                  width: \"140px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              validated: validated,\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"userName\",\n                  type: \"text\",\n                  name: \"username\",\n                  value: userDetails.username,\n                  onChange: handler,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  style: {\n                    textAlign: \"left\",\n                    marginBottom: 8\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \" Username is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  id: \"password\",\n                  name: \"password\",\n                  value: userDetails.password,\n                  onChange: handler,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  style: {\n                    textAlign: \"left\",\n                    marginBottom: 8\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \" Password is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginLeft: \"40%\"\n                },\n                className: \"btn btn-sm btn-success text-uppercase\",\n                type: \"submit\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: `d-flex justify-content-center ${errMsg.color} `,\n                children: errMsg.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}; //Checking PropTypes In Login Component\n\n\n_s(Login, \"tje9UXFViM7gPy9tmFhWxcW3MD4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nLogin.propTypes = {\n  onLoginSuccess: PropTypes.func\n};\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/v2stech/RouterAssignment/src/components/Login/Login.js"],"names":["React","useState","Container","Row","Col","Card","Form","Button","PropTypes","useHistory","applicationLogo","Login","onLoginSuccess","history","usersList","username","password","uId","errMsg","seterrMsg","msg","color","userDetails","setUserDetails","handler","e","target","name","value","validated","setValidated","submitHandler","event","form","currentTarget","preventDefault","stopPropagation","users","find","items","console","log","checkValidity","push","marginLeft","marginTop","paddingRight","borderRadius","border","backgroundColor","width","textAlign","marginBottom","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport applicationLogo from \"../img/logo.png\";\nconst Login = ({ onLoginSuccess }) => {\n  //used HisTory hook for the getting route data\n  let history = useHistory();\n\n  //UserList With login And Password\n  let usersList = [\n    {\n      username: \"user1\",\n      password: \"abc123\",\n      uId: \"1\",\n    },\n    {\n      username: \"user2\",\n      password: \"pass123\",\n      uId: \"2\",\n    },\n    {\n      username: \"user3\",\n      password: \"pass123\",\n      uId: \"3\",\n    },\n  ];\n  //Show Error Messages While Login\n  const [errMsg, seterrMsg] = useState({\n    msg: \"\",\n    color: \"\",\n  });\n\n  //Intial State of the UserDetails\n  const [userDetails, setUserDetails] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  //handling function for the input field and their values\n  const handler = (e) => {\n    setUserDetails({\n      ...userDetails,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //States used validation login Credentials\n  const [validated, setValidated] = useState(false);\n\n  //Login Submit Handler Function\n  const submitHandler = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    const users = usersList.find(\n      (items) =>\n        items.username === userDetails.username &&\n        items.password === userDetails.password\n    );\n    console.log(\"user\", users);\n    if (form.checkValidity() === false) {\n      setValidated(true);\n    } else if (users) {\n      onLoginSuccess();\n      history.push(\"/\");\n      setValidated(false);\n    } else {\n      setValidated(false);\n      seterrMsg({\n        msg: \" Invalid login Credentials\",\n        color: \"text-danger\",\n      });\n    }\n  };\n\n  //Returning  When Login Component Called\n  return (\n    <Container style={{ marginLeft: \"300px\", marginTop: \"120px\" }}>\n      <Row style={{ paddingRight: \"208px\" }}>\n        <Col md={8} sm={12} lg={7}>\n          <Card\n            style={{\n              borderRadius: \"0.25rem\",\n              border: \"1px solid #007bff\",\n            }}\n          >\n            <Card.Body\n              style={{\n                backgroundColor: \"#007bff\",\n                color: \"white\",\n              }}\n            >\n              <div className=\"text-center\">\n                <Card.Img\n                  variant=\"top\"\n                  src={applicationLogo}\n                  style={{\n                    width: \"140px\",\n                  }}\n                />\n              </div>\n\n              <Form noValidate validated={validated} onSubmit={submitHandler}>\n                <Form.Group>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    id=\"userName\"\n                    type=\"text\"\n                    name=\"username\"\n                    value={userDetails.username}\n                    onChange={handler}\n                    required\n                  />\n                  <Form.Control.Feedback\n                    type=\"invalid\"\n                    style={{\n                      textAlign: \"left\",\n                      marginBottom: 8,\n                    }}\n                  >\n                    <strong> Username is required</strong>\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <br />\n                <Form.Group>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={userDetails.password}\n                    onChange={handler}\n                    required\n                  />\n                  <Form.Control.Feedback\n                    type=\"invalid\"\n                    style={{\n                      textAlign: \"left\",\n                      marginBottom: 8,\n                    }}\n                  >\n                    <strong> Password is required</strong>\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <br />\n                <Button\n                  style={{ marginLeft: \"40%\" }}\n                  className=\"btn btn-sm btn-success text-uppercase\"\n                  type=\"submit\"\n                >\n                  Sign in\n                </Button>\n                <strong\n                  className={`d-flex justify-content-center ${errMsg.color} `}\n                >\n                  {errMsg.msg}\n                </strong>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\n//Checking PropTypes In Login Component\nLogin.propTypes = {\n  onLoginSuccess: PropTypes.func,\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}