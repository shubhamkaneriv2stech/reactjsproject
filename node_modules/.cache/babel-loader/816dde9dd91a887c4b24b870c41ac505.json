{"ast":null,"code":"var _jsxFileName = \"/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/UseMemoAndUseCallBack/UseMemoEXample.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseMemoEXample = () => {\n  _s();\n\n  const [number, setNumber] = useState(0); // function to square the value\n\n  const squareNum = inputNumber => {\n    console.log(\"Squaring will be done!\");\n    return Math.pow(inputNumber, 2);\n  }; // Using useMemo Hook\n\n\n  const squaredNum = useMemo(() => {\n    return squareNum(number);\n  }, [number]);\n  const [counter, setCounter] = useState(0); // Change the state to the input\n\n  const onChangeHandler = e => {\n    setNumber(e.target.value);\n  }; // Increases the counter by 1\n\n\n  const counterHander = () => {\n    setCounter(counter + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"firstName\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Enter Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"number\",\n        placeholder: \"Enter a number\",\n        value: number,\n        onChange: onChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"OUTPUT: \", squaredNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: counterHander,\n        children: \"Counter ++\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Counter : \", counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseMemoEXample, \"NX1oo4FktWcqDfEG75jxWpSTrBM=\");\n\n_c = UseMemoEXample;\nexport default UseMemoEXample;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseMemoEXample\");","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/UseMemoAndUseCallBack/UseMemoEXample.js"],"names":["React","useState","useMemo","Form","UseMemoEXample","number","setNumber","squareNum","inputNumber","console","log","Math","pow","squaredNum","counter","setCounter","onChangeHandler","e","target","value","counterHander"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAD,CAApC,CAD2B,CAE3B;;AACA,QAAMM,SAAS,GAAIC,WAAD,IAAiB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAOC,IAAI,CAACC,GAAL,CAASJ,WAAT,EAAsB,CAAtB,CAAP;AACD,GAHD,CAH2B,CAO3B;;;AACA,QAAMK,UAAU,GAAGX,OAAO,CAAC,MAAM;AAC/B,WAAOK,SAAS,CAACF,MAAD,CAAhB;AACD,GAFyB,EAEvB,CAACA,MAAD,CAFuB,CAA1B;AAGA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC,CAX2B,CAa3B;;AACA,QAAMe,eAAe,GAAIC,CAAD,IAAO;AAC7BX,IAAAA,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD,CAd2B,CAkB3B;;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1BL,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAkC,MAAA,SAAS,EAAC,MAA5C;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,KAAK,EAAET,MAHT;AAIE,QAAA,QAAQ,EAAEW;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA,8BACE;AAAA,+BAAcH,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEO,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,iCAAgBN,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1CD;;GAAMV,c;;KAAAA,c;AA4CN,eAAeA,cAAf","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst UseMemoEXample = () => {\n  const [number, setNumber] = useState(0);\n  // function to square the value\n  const squareNum = (inputNumber) => {\n    console.log(\"Squaring will be done!\");\n    return Math.pow(inputNumber, 2);\n  };\n  // Using useMemo Hook\n  const squaredNum = useMemo(() => {\n    return squareNum(number);\n  }, [number]);\n  const [counter, setCounter] = useState(0);\n\n  // Change the state to the input\n  const onChangeHandler = (e) => {\n    setNumber(e.target.value);\n  };\n\n  // Increases the counter by 1\n  const counterHander = () => {\n    setCounter(counter + 1);\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center align-items-center\">\n      <Form.Group controlId=\"firstName\" className=\"mb-3\">\n        <Form.Label>Enter Number</Form.Label>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"Enter a number\"\n          value={number}\n          onChange={onChangeHandler}\n        />\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-center align-items-center\">\n        <div>OUTPUT: {squaredNum}</div>\n        <button onClick={counterHander}>Counter ++</button>\n        <div>Counter : {counter}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default UseMemoEXample;\n"]},"metadata":{},"sourceType":"module"}