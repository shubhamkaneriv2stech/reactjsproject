{"ast":null,"code":"import _defineProperty from\"/home/v2stech/ReactJs/RouterAssignment (copy)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/v2stech/ReactJs/RouterAssignment (copy)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/v2stech/ReactJs/RouterAssignment (copy)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Container,Row,Col,Card,Form,Button}from\"react-bootstrap\";import{useHistory}from\"react-router-dom\";import applicationLogo from\"../img/logo.png\";import{fetchWeatherApiData}from\"../countdown/Actions/index\";import{useDispatch}from\"react-redux\";import{useSelector}from\"react-redux\";import VariableCity from\"../GlobalConstants/VariableCity\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(_ref){var onLoginSuccess=_ref.onLoginSuccess;//used HisTory hook for the getting route data\nvar history=useHistory();//UserList With login And Password\nvar usersList=[{username:\"user1\",password:\"abc123\",uId:\"1\"},{username:\"user2\",password:\"pass123\",uId:\"2\"},{username:\"user3\",password:\"pass123\",uId:\"3\"}];//Show Error Messages While Login\nvar _useState=useState({msg:\"\",color:\"\"}),_useState2=_slicedToArray(_useState,2),errMsg=_useState2[0],seterrMsg=_useState2[1];//Intial State of the UserDetails\nvar _useState3=useState({username:\"\",password:\"\"}),_useState4=_slicedToArray(_useState3,2),userDetails=_useState4[0],setUserDetails=_useState4[1];//handling function for the input field and their values\nvar handler=function handler(e){setUserDetails(_objectSpread(_objectSpread({},userDetails),{},_defineProperty({},e.target.name,e.target.value)));};// const weatherApiData = useSelector((state) => state.weatherApiReducer);\n// console.log(weatherApiData, \" api calling\");\n// const dispatch = useDispatch();\n// useEffect(() => {\n//      dispatch(fetchWeatherApiData());\n// }, [])\n//States used validation login Credentials\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),validated=_useState6[0],setValidated=_useState6[1];//Login Submit Handler Function\nvar submitHandler=function submitHandler(event){var form=event.currentTarget;event.preventDefault();event.stopPropagation();var users=usersList.find(function(items){return items.username===userDetails.username&&items.password===userDetails.password;});console.log(\"user\",users);if(form.checkValidity()===false){setValidated(true);}else if(users){localStorage.setItem(\"token\",users);onLoginSuccess();history.push(\"/\");setValidated(false);}else{setValidated(false);seterrMsg({msg:\" Invalid login Credentials\",color:\"text-danger\"});}};//Returning  When Login Component Called\nreturn/*#__PURE__*/_jsx(Container,{style:{marginLeft:\"300px\",marginTop:\"120px\"},children:/*#__PURE__*/_jsx(Row,{style:{paddingRight:\"208px\"},children:/*#__PURE__*/_jsx(Col,{md:8,sm:12,lg:7,children:/*#__PURE__*/_jsx(Card,{style:{borderRadius:\"0.25rem\",border:\"1px solid #007bff\"},children:/*#__PURE__*/_jsxs(Card.Body,{style:{backgroundColor:\"#007bff\",color:\"white\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:applicationLogo,style:{width:\"140px\"}})}),/*#__PURE__*/_jsxs(Form,{noValidate:true,validated:validated,onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Username\"}),/*#__PURE__*/_jsx(Form.Control,{id:\"userName\",type:\"text\",name:\"username\",value:userDetails.username,onChange:handler,required:true}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",style:{textAlign:\"left\",marginBottom:8},children:/*#__PURE__*/_jsx(\"strong\",{children:\" Username is required\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",id:\"password\",name:\"password\",value:userDetails.password,onChange:handler,required:true}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",style:{textAlign:\"left\",marginBottom:8},children:/*#__PURE__*/_jsx(\"strong\",{children:\" Password is required\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{style:{marginLeft:\"40%\"},className:\"btn btn-sm btn-success text-uppercase\",type:\"submit\",children:\"Sign in\"}),/*#__PURE__*/_jsx(\"strong\",{className:\"d-flex justify-content-center \".concat(errMsg.color,\" \"),children:errMsg.msg})]})]})})})})});};//Checking PropTypes In Login Component\nexport default Login;","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/Login/Login.js"],"names":["React","useState","Container","Row","Col","Card","Form","Button","useHistory","applicationLogo","fetchWeatherApiData","useDispatch","useSelector","VariableCity","Login","onLoginSuccess","history","usersList","username","password","uId","msg","color","errMsg","seterrMsg","userDetails","setUserDetails","handler","e","target","name","value","validated","setValidated","submitHandler","event","form","currentTarget","preventDefault","stopPropagation","users","find","items","console","log","checkValidity","localStorage","setItem","push","marginLeft","marginTop","paddingRight","borderRadius","border","backgroundColor","width","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport applicationLogo from \"../img/logo.png\";\nimport { fetchWeatherApiData } from \"../countdown/Actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport VariableCity from \"../GlobalConstants/VariableCity\";\nconst Login = ({ onLoginSuccess }) => {\n  //used HisTory hook for the getting route data\n  let history = useHistory();\n\n  //UserList With login And Password\n  let usersList = [\n    {\n      username: \"user1\",\n      password: \"abc123\",\n      uId: \"1\",\n    },\n    {\n      username: \"user2\",\n      password: \"pass123\",\n      uId: \"2\",\n    },\n    {\n      username: \"user3\",\n      password: \"pass123\",\n      uId: \"3\",\n    },\n  ];\n  //Show Error Messages While Login\n  const [errMsg, seterrMsg] = useState({\n    msg: \"\",\n    color: \"\",\n  });\n\n  //Intial State of the UserDetails\n  const [userDetails, setUserDetails] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  //handling function for the input field and their values\n  const handler = (e) => {\n    setUserDetails({\n      ...userDetails,\n      [e.target.name]: e.target.value,\n    });\n  };\n  // const weatherApiData = useSelector((state) => state.weatherApiReducer);\n  // console.log(weatherApiData, \" api calling\");\n\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //      dispatch(fetchWeatherApiData());\n  // }, [])\n  //States used validation login Credentials\n  const [validated, setValidated] = useState(false);\n\n  //Login Submit Handler Function\n  const submitHandler = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    const users = usersList.find(\n      (items) =>\n        items.username === userDetails.username &&\n        items.password === userDetails.password\n    );\n    console.log(\"user\", users);\n    if (form.checkValidity() === false) {\n      setValidated(true);\n    } else if (users) {\n      localStorage.setItem(\"token\", users);\n      onLoginSuccess();\n      history.push(\"/\");\n      setValidated(false);\n    } else {\n      setValidated(false);\n      seterrMsg({\n        msg: \" Invalid login Credentials\",\n        color: \"text-danger\",\n      });\n    }\n  };\n\n  //Returning  When Login Component Called\n  return (\n    <Container style={{ marginLeft: \"300px\", marginTop: \"120px\" }}>\n      <Row style={{ paddingRight: \"208px\" }}>\n        <Col md={8} sm={12} lg={7}>\n          <Card\n            style={{\n              borderRadius: \"0.25rem\",\n              border: \"1px solid #007bff\",\n            }}\n          >\n            <Card.Body\n              style={{\n                backgroundColor: \"#007bff\",\n                color: \"white\",\n              }}\n            >\n              <div className=\"text-center\">\n                <Card.Img\n                  variant=\"top\"\n                  src={applicationLogo}\n                  style={{\n                    width: \"140px\",\n                  }}\n                />\n              </div>\n\n              <Form noValidate validated={validated} onSubmit={submitHandler}>\n                <Form.Group>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    id=\"userName\"\n                    type=\"text\"\n                    name=\"username\"\n                    value={userDetails.username}\n                    onChange={handler}\n                    required\n                  />\n                  <Form.Control.Feedback\n                    type=\"invalid\"\n                    style={{\n                      textAlign: \"left\",\n                      marginBottom: 8,\n                    }}\n                  >\n                    <strong> Username is required</strong>\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <br />\n                <Form.Group>\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={userDetails.password}\n                    onChange={handler}\n                    required\n                  />\n                  <Form.Control.Feedback\n                    type=\"invalid\"\n                    style={{\n                      textAlign: \"left\",\n                      marginBottom: 8,\n                    }}\n                  >\n                    <strong> Password is required</strong>\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <br />\n                <Button\n                  style={{ marginLeft: \"40%\" }}\n                  className=\"btn btn-sm btn-success text-uppercase\"\n                  type=\"submit\"\n                >\n                  Sign in\n                </Button>\n                <strong\n                  className={`d-flex justify-content-center ${errMsg.color} `}\n                >\n                  {errMsg.msg}\n                </strong>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\n//Checking PropTypes In Login Component\nLogin.propTypes = {\n  onLoginSuccess: PropTypes.func,\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}