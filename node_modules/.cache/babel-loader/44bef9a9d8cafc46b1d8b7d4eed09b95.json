{"ast":null,"code":"import _slicedToArray from\"/home/v2stech/ReactJs/RouterAssignment (copy)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment,useEffect}from\"react\";import List from\"../List/List\";import Profile from\"../Profile/Profile\";import img from\"../img/img.png\";import{BrowserRouter as Router,Switch,Route,useHistory}from\"react-router-dom\";import\"../../stylesheet/DashBoard.css\";import{LOGOUT}from\"../countdown/types/Types\";import Todo from\"../Todo/Todo\";import PassingData from\"../ReusableTable/PassingData\";import TodoContextReducer from\"../ContextReducer/TodoContextReducer\";import{fetchWeatherApiData}from\"../countdown/Actions/weatherapiindex\";import{fetchPostsApiData}from\"../countdown/Actions/postManagementindex\";import{useDispatch}from\"react-redux\";import Topbar from\"../Topbar/Topbar\";import SideBar from\"../Sidebar/SideBar\";import User from\"../Table/User\";import Restaurant from\"../List/Restaurant\";import BasicTable from\"../ReactTable/BasicTable\";import Login from\"../Login/Login\";import{GlobalProvider}from\"../ContextReducer/GlobalState\";import UserTable from\"../Table/UserTable\";import CountDown from\"../countdown/CountDown\";import NewWeatherApi from\"../weatherapi/NewWeatherApi\";import NewPost from\"../PostsManagement/NewPost\";import FormValidation from\"../FormValidation/FormValidation\";import Charts from\"../Charts/Charts\";import CombineExample from\"../UseMemoAndUseCallBack/CombineExample\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Approuter=function Approuter(){var dispatch=useDispatch();//State For UserLogging Or NotLoggedIn\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];//Login Success Function\nvar onLoginSuccess=function onLoginSuccess(){setIsLoggedIn(true);dispatch(fetchWeatherApiData());dispatch(fetchPostsApiData());};//LogoutSuccess Function\nvar onLogoutSuccess=function onLogoutSuccess(){localStorage.removeItem(\"token\");setIsLoggedIn(false);dispatch({type:LOGOUT});};useEffect(function(){var token=localStorage.getItem(\"token\");if(token){setIsLoggedIn(true);}},[]);// After Successful login or not Successful login  Returning Router Part\nreturn/*#__PURE__*/_jsx(Fragment,{children:!isLoggedIn?/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(Login,{onLoginSuccess:onLoginSuccess})})}):/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(GlobalProvider,{children:[/*#__PURE__*/_jsx(SideBar,{img:img}),/*#__PURE__*/_jsx(Topbar,{logout:onLogoutSuccess}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Profile}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/list\",component:List}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/list/:id\",component:Restaurant}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/table\",component:UserTable}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/table/:id\",component:User}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/todo\",component:Todo}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/todo/:id\",component:Todo}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/commonTable\",component:PassingData}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/TodoAppContext\",component:TodoContextReducer}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/reactTable\",component:BasicTable}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/weatherapi\",component:NewWeatherApi}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/PostsTable\",component:NewPost}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/countDown\",component:CountDown}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/formValidation\",component:FormValidation}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/charts\",component:Charts}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/UseMemoAndUseCallback\",component:CombineExample})]})]})})})});};export default Approuter;","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/Router/AppRouter.js"],"names":["React","useState","Fragment","useEffect","List","Profile","img","BrowserRouter","Router","Switch","Route","useHistory","LOGOUT","Todo","PassingData","TodoContextReducer","fetchWeatherApiData","fetchPostsApiData","useDispatch","Topbar","SideBar","User","Restaurant","BasicTable","Login","GlobalProvider","UserTable","CountDown","NewWeatherApi","NewPost","FormValidation","Charts","CombineExample","Approuter","dispatch","isLoggedIn","setIsLoggedIn","onLoginSuccess","onLogoutSuccess","localStorage","removeItem","type","token","getItem"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\r\nimport List from \"../List/List\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport img from \"../img/img.png\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport \"../../stylesheet/DashBoard.css\";\r\nimport { LOGOUT } from \"../countdown/types/Types\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport PassingData from \"../ReusableTable/PassingData\";\r\nimport TodoContextReducer from \"../ContextReducer/TodoContextReducer\";\r\nimport { fetchWeatherApiData } from \"../countdown/Actions/weatherapiindex\";\r\nimport { fetchPostsApiData } from \"../countdown/Actions/postManagementindex\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Topbar from \"../Topbar/Topbar\";\r\nimport SideBar from \"../Sidebar/SideBar\";\r\nimport User from \"../Table/User\";\r\nimport Restaurant from \"../List/Restaurant\";\r\nimport BasicTable from \"../ReactTable/BasicTable\";\r\nimport Login from \"../Login/Login\";\r\nimport { GlobalProvider } from \"../ContextReducer/GlobalState\";\r\nimport UserTable from \"../Table/UserTable\";\r\nimport CountDown from \"../countdown/CountDown\";\r\nimport NewWeatherApi from \"../weatherapi/NewWeatherApi\";\r\nimport NewPost from \"../PostsManagement/NewPost\";\r\nimport FormValidation from \"../FormValidation/FormValidation\";\r\nimport Charts from \"../Charts/Charts\";\r\nimport CombineExample from \"../UseMemoAndUseCallBack/CombineExample\";\r\n\r\nconst Approuter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  //State For UserLogging Or NotLoggedIn\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  //Login Success Function\r\n  const onLoginSuccess = () => {\r\n    setIsLoggedIn(true);\r\n    dispatch(fetchWeatherApiData());\r\n    dispatch(fetchPostsApiData());\r\n  };\r\n  //LogoutSuccess Function\r\n  const onLogoutSuccess = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setIsLoggedIn(false);\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n  useEffect(() => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  // After Successful login or not Successful login  Returning Router Part\r\n  return (\r\n    <Fragment>\r\n      {!isLoggedIn ? (\r\n        <Router>\r\n          <Switch>\r\n            <Login onLoginSuccess={onLoginSuccess} />\r\n          </Switch>\r\n        </Router>\r\n      ) : (\r\n        <Fragment>\r\n          {\r\n            //   { dispatch(fetchWeatherApiData())}\r\n            // {dispatch(fetchPostsApiData())}\r\n          }\r\n\r\n          <Router>\r\n            <GlobalProvider>\r\n              <SideBar img={img} />\r\n              <Topbar logout={onLogoutSuccess} />\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Profile} />\r\n                <Route exact path=\"/list\" component={List} />\r\n                <Route exact path=\"/list/:id\" component={Restaurant} />\r\n                <Route exact path=\"/table\" component={UserTable} />\r\n                <Route exact path=\"/table/:id\" component={User} />\r\n                <Route exact path=\"/todo\" component={Todo} />\r\n                <Route exact path=\"/todo/:id\" component={Todo} />\r\n                <Route exact path=\"/commonTable\" component={PassingData} />\r\n                <Route\r\n                  exact\r\n                  path=\"/TodoAppContext\"\r\n                  component={TodoContextReducer}\r\n                />\r\n                <Route exact path=\"/reactTable\" component={BasicTable} />\r\n                <Route exact path=\"/weatherapi\" component={NewWeatherApi} />\r\n                <Route exact path=\"/PostsTable\" component={NewPost} />\r\n                <Route exact path=\"/countDown\" component={CountDown} />\r\n                <Route\r\n                  exact\r\n                  path=\"/formValidation\"\r\n                  component={FormValidation}\r\n                />\r\n                <Route exact path=\"/charts\" component={Charts} />\r\n                <Route\r\n                  exact\r\n                  path=\"/UseMemoAndUseCallback\"\r\n                  component={CombineExample}\r\n                />\r\n              </Switch>\r\n            </GlobalProvider>\r\n          </Router>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Approuter;\r\n"]},"metadata":{},"sourceType":"module"}