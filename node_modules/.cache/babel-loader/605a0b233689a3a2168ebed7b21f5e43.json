{"ast":null,"code":"import _objectSpread from\"/home/v2stech/ReactJs/RouterAssignment (copy)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{OverlayTrigger,Tooltip}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CommonTable=function CommonTable(_ref){var data=_ref.data,columns=_ref.columns,title=_ref.title,styelName=_ref.styelName,toolTip=_ref.toolTip;// console.log(data);\n// console.log(columns);\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"0px 28px 0px\"},children:[/*#__PURE__*/_jsx(\"h5\",{children:title}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered table-hover table-responsive \",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"thead-dark\",children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map(function(col){return/*#__PURE__*/_jsx(\"th\",{style:{width:col.width,fontSize:\"14px\"},children:col.title});})})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.map(function(rowsItem,i){return/*#__PURE__*/_jsx(\"tr\",{children:columns.map(function(col,i){return/*#__PURE__*/_jsx(\"td\",{children:toolTip?/*#__PURE__*/_jsx(OverlayTrigger,{placement:\"top\",delay:{show:250,hide:400},overlay:function overlay(props){return/*#__PURE__*/_jsx(Tooltip,_objectSpread(_objectSpread({id:\"button-tooltip\"},props),{},{children:rowsItem[col.dataIndex]}));},children:/*#__PURE__*/_jsx(\"div\",{className:\"ellipsis_class\",children:/*#__PURE__*/_jsx(\"p\",{children:rowsItem[col.dataIndex]})})}):/*#__PURE__*/_jsx(\"div\",{className:styelName,children:rowsItem[col.dataIndex]})});})});})})]})]});};//Checking PropTypes In Login Component\nexport default CommonTable;","map":{"version":3,"sources":["/home/v2stech/ReactJs/RouterAssignment (copy)/src/components/ReusableTable/CommonTable.js"],"names":["React","OverlayTrigger","Tooltip","CommonTable","data","columns","title","styelName","toolTip","padding","map","col","width","fontSize","rowsItem","i","show","hide","props","dataIndex"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,cAAT,CAAyBC,OAAzB,KAAwC,iBAAxC,C,wFACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAkD,IAA/CC,CAAAA,IAA+C,MAA/CA,IAA+C,CAAzCC,OAAyC,MAAzCA,OAAyC,CAAhCC,KAAgC,MAAhCA,KAAgC,CAAzBC,SAAyB,MAAzBA,SAAyB,CAAdC,OAAc,MAAdA,OAAc,CAClE;AACA;AACA,mBACI,aAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,cAAX,CAAZ,wBACI,oBAAKH,KAAL,EADJ,cAEI,eAAO,SAAS,CAAC,oDAAjB,wBACI,cAAO,SAAS,CAAC,YAAjB,uBACI,oBACKD,OAAO,CAACK,GAAR,CAAY,SAACC,GAAD,CAAS,CAClB,mBACI,WACI,KAAK,CAAE,CACHC,KAAK,CAAED,GAAG,CAACC,KADR,CAEHC,QAAQ,CAAE,MAFP,CADX,UAMKF,GAAG,CAACL,KANT,EADJ,CAUH,CAXA,CADL,EADJ,EADJ,cAiBI,uBACKF,IAAI,CAACM,GAAL,CAAS,SAACI,QAAD,CAAWC,CAAX,CAAiB,CACvB,mBACI,oBACKV,OAAO,CAACK,GAAR,CAAY,SAACC,GAAD,CAAMI,CAAN,CAAY,CACrB,mBACI,oBACKP,OAAO,cACJ,KAAC,cAAD,EACI,SAAS,CAAC,KADd,CAEI,KAAK,CAAE,CACHQ,IAAI,CAAE,GADH,CAEHC,IAAI,CAAE,GAFH,CAFX,CAMI,OAAO,CAAE,iBAACC,KAAD,qBACL,KAAC,OAAD,8BACI,EAAE,CAAC,gBADP,EAEQA,KAFR,eAKQJ,QAAQ,CACJH,GAAG,CACEQ,SAFD,CALhB,GADK,EANb,uBAoBI,YAAK,SAAS,CAAC,gBAAf,uBACI,mBAEQL,QAAQ,CACJH,GAAG,CACEQ,SAFD,CAFhB,EADJ,EApBJ,EADI,cAiCJ,YAAK,SAAS,CAAEZ,SAAhB,UACKO,QAAQ,CAACH,GAAG,CAACQ,SAAL,CADb,EAlCR,EADJ,CAyCH,CA1CA,CADL,EADJ,CA+CH,CAhDA,CADL,EAjBJ,GAFJ,GADJ,CA0EH,CA7ED,CA+EA;AAMA,cAAehB,CAAAA,WAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nconst CommonTable = ({ data, columns, title, styelName, toolTip }) => {\r\n    // console.log(data);\r\n    // console.log(columns);\r\n    return (\r\n        <div style={{ padding: \"0px 28px 0px\" }}>\r\n            <h5>{title}</h5>\r\n            <table className=\"table table-bordered table-hover table-responsive \">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        {columns.map((col) => {\r\n                            return (\r\n                                <th\r\n                                    style={{\r\n                                        width: col.width,\r\n                                        fontSize: \"14px\",\r\n                                    }}\r\n                                >\r\n                                    {col.title}\r\n                                </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((rowsItem, i) => {\r\n                        return (\r\n                            <tr>\r\n                                {columns.map((col, i) => {\r\n                                    return (\r\n                                        <td>\r\n                                            {toolTip ? (\r\n                                                <OverlayTrigger\r\n                                                    placement=\"top\"\r\n                                                    delay={{\r\n                                                        show: 250,\r\n                                                        hide: 400,\r\n                                                    }}\r\n                                                    overlay={(props) => (\r\n                                                        <Tooltip\r\n                                                            id=\"button-tooltip\"\r\n                                                            {...props}\r\n                                                        >\r\n                                                            {\r\n                                                                rowsItem[\r\n                                                                    col\r\n                                                                        .dataIndex\r\n                                                                ]\r\n                                                            }\r\n                                                        </Tooltip>\r\n                                                    )}\r\n                                                >\r\n                                                    <div className=\"ellipsis_class\">\r\n                                                        <p>\r\n                                                            {\r\n                                                                rowsItem[\r\n                                                                    col\r\n                                                                        .dataIndex\r\n                                                                ]\r\n                                                            }\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </OverlayTrigger>\r\n                                            ) : (\r\n                                                <div className={styelName}>\r\n                                                    {rowsItem[col.dataIndex]}\r\n                                                </div>\r\n                                            )}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n//Checking PropTypes In Login Component\r\nCommonTable.propTypes = {\r\n    columns: PropTypes.array,\r\n    data: PropTypes.array,\r\n};\r\n\r\nexport default CommonTable;\r\n"]},"metadata":{},"sourceType":"module"}